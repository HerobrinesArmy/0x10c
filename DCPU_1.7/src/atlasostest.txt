; =====Begin file: AtlasOS 0.6.2
dat 0x7f81,0x2             ; SET PC, AtlasOS
; :AtlasOS (line 4)
; =====Begin file: ../include/kernel.inc
; :data (line 2)
dat 0x7f81,0x47b           ; SET PC, data_end
; :os_version_main dat 0x0000 (line 17)
dat 0x0                    ; .dat 0x0000
; :os_version_sub dat 0x0006 (line 18)
dat 0x6                    ; .dat 0x0006
; :os_version_fix dat 0x0002 (line 19)
dat 0x2                    ; .dat 0x0002
; :preemptive_enabled dat 0x0000 (line 21)
dat 0x0                    ; .dat 0x0000
; :text_start dat "AtlasOS v0.6.2 starting... ", 0x00 (line 23)
dat 0x41,0x74,0x6c,0x61,0x73,0x4f,0x53,0x20,0x76,0x30,0x2e,0x36,0x2e,0x32,0x20,0x73,0x74,0x61,0x72,0x74,0x69,0x6e,0x67,0x2e,0x2e,0x2e,0x20,0x0; .dat "AtlasOS v0.6.2 starting... ", 0x00
; :text_start_ok dat "OK", 0xA0, 0x00 (line 24)
dat 0x4f,0x4b,0xa0,0x0     ; .dat "OK", 0xA0, 0x00
; :text_logo (line 25)
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x5f,0x5f,0x20,0x20,0x20,0x5f,0x5f,0x20,0x20,0x20,0x5f,0x5f,0xa0; .dat "      ___   __   __", 0xA0
dat 0x20,0x20,0x20,0x20,0x20,0x2f,0x20,0x20,0x20,0x7c,0x20,0x2f,0x20,0x2f,0x5f,0x20,0x2f,0x20,0x2f,0x5f,0x5f,0x5f,0x5f,0x20,0x5f,0x5f,0x5f,0x5f,0x5f,0x5f,0xa0; .dat "     /   | / /_ / /____ ______", 0xA0
dat 0x20,0x20,0x20,0x20,0x2f,0x20,0x2f,0x7c,0x20,0x7c,0x2f,0x20,0x5f,0x5f,0x2f,0x2f,0x20,0x2f,0x2f,0x20,0x5f,0x5f,0x20,0x60,0x2f,0x20,0x5f,0x5f,0x5f,0x2f,0xa0; .dat "    / /| |/ __// // __ `/ ___/", 0xA0
dat 0x20,0x20,0x20,0x2f,0x20,0x5f,0x5f,0x5f,0x20,0x2f,0x20,0x2f,0x20,0x20,0x2f,0x20,0x2f,0x2f,0x20,0x2f,0x5f,0x2f,0x20,0x28,0x5f,0x5f,0x20,0x20,0x29,0xa0; .dat "   / ___ / /  / // /_/ (__  )", 0xA0
dat 0x20,0x20,0x2f,0x5f,0x2f,0x20,0x20,0x7c,0x5f,0x5c,0x5f,0x2f,0x5f,0x2f,0x5f,0x2f,0x20,0x5c,0x5f,0x5f,0x2c,0x5f,0x2f,0x5f,0x5f,0x5f,0x5f,0x2f,0xa0; .dat "  /_/  |_\\_/_/_/ \\__,_/____/", 0xA0
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2f,0x20,0x5f,0x5f,0x20,0x5c,0x2f,0x20,0x5f,0x5f,0x5f,0x2f,0xa0; .dat "         / __ \\/ ___/", 0xA0
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2f,0x20,0x2f,0x20,0x2f,0x20,0x2f,0x5c,0x5f,0x5f,0x20,0x5c,0xa0; .dat "        / / / /\\__ \\", 0xA0
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2f,0x20,0x2f,0x5f,0x2f,0x20,0x2f,0x5f,0x5f,0x5f,0x2f,0x20,0x2f,0xa0; .dat "       / /_/ /___/ /", 0xA0
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5c,0x5f,0x5f,0x5f,0x5f,0x2f,0x2f,0x5f,0x5f,0x5f,0x5f,0x2f,0xa0,0x0; .dat "       \\____//____/", 0xA0, 0x00
; :text_logo_end (line 35)
; :page_map (line 38)
; :page_map0 dat 0x0000 (line 39)
dat 0x0                    ; .dat 0x0000
; :page_map1 dat 0x0000 (line 40)
dat 0x0                    ; .dat 0x0000
; :page_map2 dat 0x0000 (line 41)
dat 0x0                    ; .dat 0x0000
; :page_map3 dat 0x0000 (line 42)
dat 0x0                    ; .dat 0x0000
; :page_table (line 48)
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :page_table_end (line 65)
; :message_queue_table (line 67)
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :message_queue_table_end (line 72)
; :proc_current dat 0x0001 (line 74)
dat 0x1                    ; .dat 0x0001
; :proc_buffer dat 0x0000 (line 75)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_a dat 0x0000 (line 76)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_b dat 0x0000 (line 77)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_c dat 0x0000 (line 78)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_x dat 0x0000 (line 79)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_y dat 0x0000 (line 80)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_z dat 0x0000 (line 81)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_i dat 0x0000 (line 82)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_j dat 0x0000 (line 83)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_sp dat 0x0000 (line 84)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_mem dat 0x0000 (line 85)
dat 0x0                    ; .dat 0x0000
; :proc_buffer_flags dat 0x0000 (line 86)
dat 0x0                    ; .dat 0x0000
; :proc_table (line 87)
dat 0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :proc_table10 (line 89)
dat 0xffff,0x0,0xfffd      ; .dat 0xFFFF, 0x0000, 0xFFFD
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :proc_table_end (line 122)
; :keyboard_mem (line 125)
dat 0x9000                 ; .dat 0x9000
; :keyboard_buffers (line 127)
dat 0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :keyboard_buffers_end (line 129)
; :keyboard_buffers_flags (line 130)
dat 0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :keyboard_buffers_flags_end (line 132)
; :keyboard_buffers_exclusive dat 0x0000 (line 133)
dat 0x0                    ; .dat 0x0000
; :keyboard_oldvalue dat 0x0000 (line 134)
dat 0x0                    ; .dat 0x0000
; :kernel_watchdog_proc_list_buffer (line 137)
dat 0x0,0x0                ; .dat 0x0000, 0x0000
; :kernel_watchdog_proc_list_buffer_end (line 139)
; :char_set (line 145)
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :char_set_end (line 162)
; :screen_buffer_exclusive dat 0x0000 (line 163)
dat 0x0                    ; .dat 0x0000
; :entropy dat 0x0000 (line 165)
dat 0x0                    ; .dat 0x0000
; :api_start (line 167)
dat 0xafb                  ; .dat os_version
dat 0xb02                  ; .dat proc_id
dat 0xb5e                  ; .dat proc_suspend
dat 0xb05                  ; .dat proc_get_addr
dat 0xb0d                  ; .dat proc_get_flags
dat 0xc9b                  ; .dat proc_kill_me
dat 0xcba                  ; .dat proc_kill
dat 0xbce                  ; .dat proc_load
dat 0x0                    ; .dat 0x0000
dat 0xb4d                  ; .dat proc_callback_list
dat 0xa3c                  ; .dat msg_queue_reg
dat 0xa59                  ; .dat msg_queue_rem
dat 0xa75                  ; .dat msg_broadcast
dat 0x0                    ; .dat 0x0000
dat 0xabb                  ; .dat msg_get_message
dat 0x924                  ; .dat page_alloc
dat 0x968                  ; .dat page_free
dat 0xa13                  ; .dat page_check
dat 0xa24                  ; .dat page_check_of
dat 0x883                  ; .dat mem_copy
dat 0x876                  ; .dat mem_clear
dat 0x770                  ; .dat pusha
dat 0x77d                  ; .dat popa
dat 0x78b                  ; .dat strcpy
dat 0x799                  ; .dat strncpy
dat 0x7ce                  ; .dat strlen
dat 0x7b6                  ; .dat strcmp
dat 0x733                  ; .dat itoa
dat 0x0                    ; .dat 0x0000
dat 0x757                  ; .dat atoi
dat 0x666                  ; .dat text_out
dat 0x6a5                  ; .dat newline
dat 0x6be                  ; .dat scroll
dat 0x6ee                  ; .dat clear
dat 0x719                  ; .dat char_put
dat 0x7db                  ; .dat read_line
dat 0x864                  ; .dat rand
dat 0x86d                  ; .dat srand
dat 0x55e                  ; .dat keyboard_register
dat 0x576                  ; .dat keyboard_unregister
dat 0x595                  ; .dat keyboard_is_exclusive_active
dat 0x5af                  ; .dat virtual_filesystem_getfile
dat 0x5ac                  ; .dat virtual_filesystem_getfile_table
dat 0x5d3                  ; .dat virtual_filesystem_getfile_bystart
dat 0x726                  ; .dat char_get
; :api_end (line 225)
; :data_end (line 228)
; =====Begin file: kernel/core.dasm16
dat 0x7f81,0xcd0           ; SET PC, kernel_boot
; =====Begin file: drivers.dasm16
; :bios_boot (line 4)
dat 0x1600                 ; HWN Z
dat 0x7cb2,0x0             ; IFE Z, 0
dat 0x7f81,0x47d           ; SET PC, bios_boot
; :bios_discover_hardware_loop (line 9)
dat 0x7ca3,0x1             ; SUB Z, 1
dat 0x1620                 ; HWQ Z
dat 0x7c12,0xf615          ; IFE A, 0xF615
dat 0x7c32,0x7349          ; IFE B, 0x7349
dat 0x7c20,0x49c           ; JSR bios_display_init
dat 0x7c12,0x7406          ; IFE A, 0x7406
dat 0x7c32,0x30cf          ; IFE B, 0x30CF
dat 0x7c20,0x4d0           ; JSR bios_keyboard_init
dat 0x7c12,0xb402          ; IFE A, 0xB402
dat 0x7c32,0x12d0          ; IFE B, 0x12D0
dat 0x7c20,0x4da           ; JSR bios_clock_init
dat 0x7cb3,0x0             ; IFN Z, 0
dat 0x7f81,0x482           ; SET PC, bios_discover_hardware_loop
dat 0x6381                 ; SET PC, POP
; :bios_display_init (line 35)
dat 0x17c1,0x51a           ; SET [display_address], Z
dat 0x7bc1,0x51b,0x51c     ; SET [video_font], [video_mem]
dat 0x7fc2,0x180,0x51c     ; ADD [video_font], 0x0180
dat 0x7bc1,0x51c,0x51d     ; SET [video_palette], [video_font]
dat 0x7fc2,0x100,0x51d     ; ADD [video_palette], 0x0100
dat 0x7c01,0x0             ; SET A, 0
dat 0x7821,0x51b           ; SET B, [video_mem]
dat 0x1640                 ; HWI Z
dat 0x7c01,0x1             ; SET A, 1
dat 0x7821,0x51c           ; SET B, [video_font]
dat 0x1640                 ; HWI Z
dat 0x7c01,0x2             ; SET A, 2
dat 0x7821,0x51d           ; SET B, [video_palette]
dat 0x1640                 ; HWI Z
dat 0x7c01,0x3             ; SET A, 3
dat 0x7c21,0x1             ; SET B, 0x01
dat 0x1640                 ; HWI Z
dat 0x7c01,0x4             ; SET A, 4
dat 0x7821,0x51c           ; SET B, [video_font]
dat 0x1640                 ; HWI Z
dat 0x7c01,0x5             ; SET A, 5
dat 0x7821,0x51d           ; SET B, [video_palette]
dat 0x1640                 ; HWI Z
dat 0x7801,0x51b           ; SET A, [video_mem]
dat 0x7c20,0x895           ; JSR page_reserve
dat 0x7bc1,0x51b,0x51f     ; SET [video_cur], [video_mem]
dat 0x6381                 ; SET PC, POP
; :bios_keyboard_init (line 77)
dat 0x17c1,0x523           ; SET [keyboard_address], Z
dat 0x7c01,0x3             ; SET A, 3
dat 0x7821,0x523           ; SET B, [keyboard_address]
dat 0x7c22,0x1             ; ADD B, 1
dat 0x1640                 ; HWI Z
dat 0x6381                 ; SET PC, POP
; :bios_clock_init (line 87)
dat 0x17c1,0x524           ; SET [clock_address], Z
dat 0x7c01,0x0             ; SET A, 0
dat 0x7c21,0xc             ; SET B, 12
dat 0x7a40,0x524           ; HWI [clock_address]
dat 0x7c01,0x2             ; SET A, 2
dat 0x7821,0x524           ; SET B, [clock_address]
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7a40,0x524           ; HWI [clock_address]
dat 0x6381                 ; SET PC, POP
; :bios_floppy_init (line 103)
dat 0x17c1,0x525           ; SET [floppy_address], Z
dat 0x7c01,0x5             ; SET A, 5
dat 0x7821,0x525           ; SET B, [floppy_address]
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7a40,0x525           ; HWI [floppy_address]
dat 0x7c01,0x0             ; SET A, 0
dat 0x7a40,0x525           ; HWI [floppy_address]
dat 0x7c32,0x0             ; IFE B, 0
dat 0x7f81,0x519           ; SET PC, bios_floppy_end
dat 0x7c01,0x1             ; SET A, 0x0001
dat 0x7a40,0x525           ; HWI [floppy_address]
dat 0x7c1,0x526            ; SET [floppy_words_per_sector], B
dat 0xbc1,0x527            ; SET [floppy_sectors], C
dat 0xfc1,0x528            ; SET [floppy_write_locked], X
dat 0x7c01,0xffff          ; SET A, 0xFFFF
dat 0x7a40,0x525           ; HWI [floppy_address]
dat 0x7c1,0x529            ; SET [floppy_quality], B
dat 0x7861,0x52a           ; SET X, [floppy_paging_address]
dat 0xc81                  ; SET Y, X
dat 0x7882,0x52b           ; ADD Y, [floppy_paging_size]
; :bios_floppy_page_reserve (line 132)
dat 0x7c20,0x895           ; JSR page_reserve
dat 0x7c62,0x200           ; ADD X, 512
dat 0x1073                 ; IFN X, Y
dat 0x7f81,0x512           ; SET PC, bios_floppy_page_reserve
; :bios_floppy_end (line 137)
dat 0x6381                 ; SET PC, POP
; :display_address (line 140)
dat 0x0                    ; .dat 0x0000
; :video_mem (line 142)
dat 0xf800                 ; .dat 0xF800
; :video_font (line 144)
dat 0x0                    ; .dat 0x0000
; :video_palette (line 146)
dat 0x0                    ; .dat 0x0000
; :video_col (line 148)
dat 0x7000                 ; .dat 0x7000
; :video_cur (line 150)
dat 0x0                    ; .dat 0x0000
; :video_clear (line 152)
dat 0x7020                 ; .dat 0x7020
; :video_width (line 154)
dat 0x20                   ; .dat 0x0020
; :video_height (line 156)
dat 0xc                    ; .dat 0x000C
; :keyboard_address (line 159)
dat 0x0                    ; .dat 0x0000
; :clock_address (line 162)
dat 0x0                    ; .dat 0x0000
; :floppy_address (line 165)
dat 0x0                    ; .dat 0x0000
; :floppy_words_per_sector (line 167)
dat 0x0                    ; .dat 0x0000
; :floppy_sectors (line 169)
dat 0x0                    ; .dat 0x0000
; :floppy_write_locked (line 171)
dat 0x0                    ; .dat 0x0000
; :floppy_quality (line 173)
dat 0x0                    ; .dat 0x0000
; :floppy_paging_address (line 175)
dat 0xeb00                 ; .dat 0xEB00
; :floppy_paging_size (line 177)
dat 0x1000                 ; .dat 0x1000
; :floppy_page_inuseflags (line 179)
dat 0x0                    ; .dat 0x0000
dat 0x0                    ; .dat 0x0000
; :driver_keyboard (line 188)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c01,0x1             ; SET A, 1
dat 0x7a40,0x523           ; HWI [keyboard_address]
dat 0x7852,0x349           ; IFE C, [keyboard_oldvalue]
dat 0x7f81,0x54a           ; SET PC, driver_keyboard_end
dat 0x7c01,0x33c           ; SET A, keyboard_buffers
dat 0x7fd3,0x0,0x348       ; IFN [keyboard_buffers_exclusive], 0
dat 0x7f81,0x554           ; SET PC, driver_keyboard_exclusive
; :driver_keyboard_loop (line 205)
dat 0x7d13,0x0             ; IFN [A], 0
dat 0x7c20,0x559           ; JSR driver_keyboard_save_to_buffer
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c13,0x342           ; IFN A, keyboard_buffers_end
dat 0x7f81,0x540           ; SET PC, driver_keyboard_loop
; :driver_keyboard_end (line 213)
dat 0xbc1,0x349            ; SET [keyboard_oldvalue], C
dat 0x7c01,0x0             ; SET A, 0
dat 0x7a40,0x523           ; HWI [keyboard_address]
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :driver_keyboard_exclusive (line 222)
dat 0x7821,0x348           ; SET B, [keyboard_buffers_exclusive]
dat 0x921                  ; SET [B], C
dat 0x7f81,0x54a           ; SET PC, driver_keyboard_end
; :driver_keyboard_save_to_buffer (line 227)
dat 0x2021                 ; SET B, [A]
dat 0x921                  ; SET [B], C
dat 0x6381                 ; SET PC, POP
; :driver_floppy (line 236)
dat 0x6381                 ; SET PC, POP
; :driver_floppy_handle_interrupt (line 239)
dat 0x6381                 ; SET PC, POP
; :keyboard_register (line 248)
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c41,0x33c           ; SET C, keyboard_buffers
; :keyboard_register_loop (line 255)
dat 0x7d52,0x0             ; IFE [C], 0
dat 0x7f81,0x56d           ; SET PC, keyboard_register_set
dat 0x7c42,0x1             ; ADD C, 1
dat 0x7c53,0x342           ; IFN C, keyboard_buffers_end
dat 0x7f81,0x563           ; SET PC, keyboard_register_loop
; :keyboard_register_set (line 262)
dat 0x141                  ; SET [C], A
dat 0x7c32,0x1             ; IFE B, 1
dat 0x3c1,0x348            ; SET [keyboard_buffers_exclusive], A
; :keyboard_register_end (line 267)
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6041                 ; SET C, POP
dat 0x6381                 ; SET PC, POP
; :keyboard_unregister (line 277)
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c21,0x33c           ; SET B, keyboard_buffers
; :keyboard_unregister_loop (line 283)
dat 0x132                  ; IFE [B], A
dat 0x7f81,0x585           ; SET PC, keyboard_unregister_unset
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c33,0x342           ; IFN B, keyboard_buffers_end
dat 0x7f81,0x57a           ; SET PC, keyboard_unregister_loop
dat 0x7f81,0x58b           ; SET PC, keyboard_unregister_end
; :keyboard_unregister_unset (line 290)
dat 0x7d21,0x0             ; SET [B], 0x0000
dat 0x7812,0x348           ; IFE A, [keyboard_buffers_exclusive]
dat 0x7c20,0x58e           ; JSR keyboard_unregister_exclusive
; :keyboard_unregister_end (line 297)
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :keyboard_unregister_exclusive (line 302)
dat 0x7fc1,0xffff,0x349    ; SET [keyboard_oldvalue], 0xFFFF
dat 0x7fc1,0x0,0x348       ; SET [keyboard_buffers_exclusive], 0
dat 0x6381                 ; SET PC, POP
; :keyboard_is_exclusive_active (line 310)
dat 0x7c01,0x0             ; SET A, 0
dat 0x7fd3,0x0,0x348       ; IFN [keyboard_buffers_exclusive], 0
dat 0x7c01,0x1             ; SET A, 1
dat 0x6381                 ; SET PC, POP
; :keyboard_unregister_all (line 318)
dat 0x301                  ; SET PUSH, A
dat 0x7c01,0x33c           ; SET A, keyboard_buffers
; :keyboard_unregister_all_loop (line 321)
dat 0x7c12,0x342           ; IFE A, keyboard_buffers_end
dat 0x7f81,0x5aa           ; SET PC, keyboard_unregister_all_end
dat 0x7d01,0x0             ; SET [A], 0
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7f81,0x5a0           ; SET PC, keyboard_unregister_all_loop
; :keyboard_unregister_all_end (line 327)
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; =====Begin file: filesystem.dasm16
; :virtual_filesystem_getfile_table (line 5)
dat 0x7c01,0x1b98          ; SET A, files_table
dat 0x6381                 ; SET PC, POP
; :virtual_filesystem_getfile (line 11)
dat 0xf01                  ; SET PUSH, X
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x21                   ; SET B, A
dat 0x7c20,0x5ac           ; JSR virtual_filesystem_getfile_table
dat 0x2061                 ; SET X, [A]
dat 0x7c02,0x1             ; ADD A, 1
; :virtual_filesystem_getfile_loop (line 21)
dat 0x7c41,0x0             ; SET C, 0
dat 0x7c72,0x0             ; IFE X, 0
dat 0x7f81,0x5cf           ; SET PC, virtual_filesystem_getfile_end
dat 0x7c63,0x1             ; SUB X, 1
dat 0x7c02,0x2             ; ADD A, 2
dat 0x7c20,0x7b6           ; JSR strcmp
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x5cc           ; SET PC, virtual_filesystem_getfile_found
dat 0x7c02,0x12            ; ADD A, 18
dat 0x7f81,0x5b8           ; SET PC, virtual_filesystem_getfile_loop
; :virtual_filesystem_getfile_found (line 34)
dat 0x7c03,0x2             ; SUB A, 2
dat 0x41                   ; SET C, A
; :virtual_filesystem_getfile_end (line 38)
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6061                 ; SET X, POP
dat 0x6381                 ; SET PC, POP
; :virtual_filesystem_getfile_bystart (line 46)
dat 0xf01                  ; SET PUSH, X
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x21                   ; SET B, A
dat 0x7c20,0x5ac           ; JSR virtual_filesystem_getfile_table
dat 0x2061                 ; SET X, [A]
dat 0x7c02,0x1             ; ADD A, 1
; :virtual_filesystem_getfile_bystart_loop (line 56)
dat 0x7c41,0x0             ; SET C, 0
dat 0x7c72,0x0             ; IFE X, 0
dat 0x7f81,0x5f0           ; SET PC, virtual_filesystem_getfile_bystart_end
dat 0x7c63,0x1             ; SUB X, 1
dat 0x7c02,0x12            ; ADD A, 18
dat 0x2032                 ; IFE B, [A]
dat 0x7f81,0x5ed           ; SET PC, virtual_filesystem_getfile_bystart_found
dat 0x7c02,0x2             ; ADD A, 2
dat 0x7f81,0x5dc           ; SET PC, virtual_filesystem_getfile_bystart_loop
; :virtual_filesystem_getfile_bystart_found (line 69)
dat 0x7c03,0x12            ; SUB A, 18
dat 0x41                   ; SET C, A
; :virtual_filesystem_getfile_bystart_end (line 73)
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6061                 ; SET X, POP
dat 0x6381                 ; SET PC, POP
; :filesystem_getsectorsize (line 85)
; :filesystem_getsectorcount (line 88)
; :filesystem_getdisksize (line 91)
; :filesystem_getFATsize (line 95)
; :filesystem_getfreespace (line 98)
; =====Begin file: graphics.dasm16
; :manage_charset (line 5)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x41                   ; SET C, A
dat 0x7c01,0x34c           ; SET A, char_set
dat 0x7821,0x51c           ; SET B, [video_font]
; :manage_charset_loop (line 12)
dat 0x7c12,0x44c           ; IFE A, char_set_end
dat 0x7f81,0x60c           ; SET PC, manage_charset_end
dat 0x7c52,0x0             ; IFE C, 0
dat 0x2501                 ; SET [A], [B]
dat 0x7c54,0x0             ; IFG C, 0
dat 0x2121                 ; SET [B], [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7f81,0x5fc           ; SET PC, manage_charset_loop
; :manage_charset_end (line 22)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; =====Begin file: interrupts.dasm16
; :kernel_interrupt_handler (line 2)
dat 0x7701                 ; SET PUSH, EX
dat 0x7c03,0x1             ; SUB A, 1
dat 0x7812,0x523           ; IFE A, [keyboard_address]
dat 0x7c20,0x63f           ; JSR kernel_interrupt_handler_keyboard
dat 0x7812,0x524           ; IFE A, [clock_address]
dat 0x7c20,0x640           ; JSR kernel_interrupt_handler_clock
dat 0x7812,0x525           ; IFE A, [floppy_address]
dat 0x7c20,0x654           ; JSR kernel_interrupt_handler_floppy
dat 0x7c12,0xfedb          ; IFE A, 0xFEDB
dat 0x7c20,0x626           ; JSR kernel_interrupt_handler_manual
dat 0x63a1                 ; SET EX, POP
dat 0x7d60,0x0             ; RFI 0
; :kernel_interrupt_handler_manual (line 19)
dat 0x7fd3,0x0,0xbcd       ; IFN [proc_suspend_param], 0
dat 0x7f81,0x63e           ; SET PC, kernel_interrupt_handler_manual_skip_suspend
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c01,0x2             ; SET A, 2
dat 0x7c21,0x0             ; SET B, 0
dat 0x7c41,0x6000          ; SET C, 0x6000
dat 0x7c20,0x657           ; JSR kernel_interrupt_debug_clock_ticker
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6041                 ; SET C, POP
dat 0x7fc1,0x1,0xbcd       ; SET [proc_suspend_param], 1
dat 0x7c20,0xb65           ; JSR proc_suspend_interrupt
; :kernel_interrupt_handler_manual_skip_suspend (line 38)
dat 0x6381                 ; SET PC, POP
; :kernel_interrupt_handler_keyboard (line 41)
dat 0x6381                 ; SET PC, POP
; :kernel_interrupt_handler_clock (line 45)
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c01,0x0             ; SET A, 0
dat 0x7c21,0x0             ; SET B, 0
dat 0x7c41,0x5000          ; SET C, 0x5000
dat 0x7c20,0x657           ; JSR kernel_interrupt_debug_clock_ticker
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6041                 ; SET C, POP
dat 0x7fd3,0x0,0xbcd       ; IFN [proc_suspend_param], 0
dat 0x7f81,0x653           ; SET PC, kernel_interrupt_handler_clock_skip_suspend
; :kernel_interrupt_handler_clock_skip_suspend (line 64)
dat 0x6381                 ; SET PC, POP
; :kernel_interrupt_handler_floppy (line 67)
dat 0x7c20,0x55d           ; JSR driver_floppy_handle_interrupt
dat 0x6381                 ; SET PC, POP
; :kernel_interrupt_debug_clock_ticker (line 76)
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0x864           ; JSR rand
dat 0x7c0a,0x7f            ; AND A, 0x007F
dat 0x80b                  ; BOR A, C
dat 0x41                   ; SET C, A
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x7c20,0x719           ; JSR char_put
dat 0x6041                 ; SET C, POP
dat 0x6381                 ; SET PC, POP
; =====Begin file: library.dasm16
; :text_out (line 4)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0xf01                  ; SET PUSH, X
dat 0x1b01                 ; SET PUSH, I
dat 0x7821,0x51e           ; SET B, [video_col]
dat 0x78c1,0x51f           ; SET I, [video_cur]
dat 0x7861,0x521           ; SET X, [video_width]
dat 0x7864,0x522           ; MUL X, [video_height]
dat 0x7862,0x51b           ; ADD X, [video_mem]
; :text_out_loop (line 18)
dat 0x2041                 ; SET C, [A]
dat 0x7c52,0x0             ; IFE C, 0x0000
dat 0x7f81,0x69d           ; SET PC, text_out_end
dat 0x7c52,0xa0            ; IFE C, 0x00A0
dat 0x7f81,0x693           ; SET PC, text_out_nl
dat 0x7c4a,0xff            ; AND C, 0x00FF
dat 0x44b                  ; BOR C, B
dat 0x9c1                  ; SET [I], C
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7cc2,0x1             ; ADD I, 1
dat 0xcd2                  ; IFE I, X
dat 0x7f81,0x68b           ; SET PC, text_out_scroll
dat 0x7f81,0x675           ; SET PC, text_out_loop
; :text_out_scroll (line 33)
dat 0x1bc1,0x51f           ; SET [video_cur], I
dat 0x7c20,0x6be           ; JSR scroll
dat 0x78c1,0x51f           ; SET I, [video_cur]
dat 0x7f81,0x675           ; SET PC, text_out_loop
; :text_out_nl (line 39)
dat 0x1bc1,0x51f           ; SET [video_cur], I
dat 0x7c20,0x6a5           ; JSR newline
dat 0x78c1,0x51f           ; SET I, [video_cur]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7f81,0x675           ; SET PC, text_out_loop
; :text_out_end (line 46)
dat 0x1bc1,0x51f           ; SET [video_cur], I
dat 0x60c1                 ; SET I, POP
dat 0x6061                 ; SET X, POP
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :newline (line 56)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xf01                  ; SET PUSH, X
dat 0x7861,0x521           ; SET X, [video_width]
dat 0x7864,0x522           ; MUL X, [video_height]
dat 0x7862,0x51b           ; ADD X, [video_mem]
dat 0x7c01,0x20            ; SET A, 0x0020
dat 0x7821,0x51f           ; SET B, [video_cur]
dat 0x28                   ; MOD B, A
dat 0x403                  ; SUB A, B
dat 0x3c2,0x51f            ; ADD [video_cur], A
dat 0xfd2,0x51f            ; IFE [video_cur], X
dat 0x7c20,0x6be           ; JSR scroll
dat 0x6061                 ; SET X, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :scroll (line 79)
dat 0x301                  ; SET PUSH, A
dat 0xf01                  ; SET PUSH, X
dat 0x1301                 ; SET PUSH, Y
dat 0x7861,0x51b           ; SET X, [video_mem]
dat 0x7881,0x51b           ; SET Y, [video_mem]
dat 0x7c82,0x20            ; ADD Y, 0x0020
dat 0x7801,0x521           ; SET A, [video_width]
dat 0x7804,0x522           ; MUL A, [video_height]
dat 0x7802,0x51b           ; ADD A, [video_mem]
; :scroll_loop1 (line 92)
dat 0x3161                 ; SET [X], [Y]
dat 0x5261,0x1,0x1         ; SET [1+X], [1+Y]
dat 0x5261,0x2,0x2         ; SET [2+X], [2+Y]
dat 0x5261,0x3,0x3         ; SET [3+X], [3+Y]
dat 0x7c62,0x4             ; ADD X, 4
dat 0x7c82,0x4             ; ADD Y, 4
dat 0x93                   ; IFN Y, A
dat 0x7f81,0x6cd           ; SET PC, scroll_loop1
; :scroll_loop2 (line 104)
dat 0x7961,0x520           ; SET [X], [video_clear]
dat 0x7c62,0x1             ; ADD X, 1
dat 0x72                   ; IFE X, A
dat 0x7f81,0x6e7           ; SET PC, scroll_end
dat 0x7f81,0x6de           ; SET PC, scroll_loop2
; :scroll_end (line 111)
dat 0x7fc3,0x20,0x51f      ; SUB [video_cur], 0x20
dat 0x6081                 ; SET Y, POP
dat 0x6061                 ; SET X, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :clear (line 119)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7801,0x51b           ; SET A, [video_mem]
dat 0x7821,0x520           ; SET B, [video_clear]
dat 0x7841,0x521           ; SET C, [video_width]
dat 0x7844,0x522           ; MUL C, [video_height]
dat 0x7842,0x51b           ; ADD C, [video_mem]
; :clear_loop (line 130)
dat 0x501                  ; SET [A], B
dat 0x601,0x1              ; SET [1+A], B
dat 0x601,0x2              ; SET [2+A], B
dat 0x601,0x3              ; SET [3+A], B
dat 0x7c02,0x4             ; ADD A, 4
dat 0x813                  ; IFN A, C
dat 0x7f81,0x6fb           ; SET PC, clear_loop
; :clear_end (line 140)
dat 0x7bc1,0x51b,0x51f     ; SET [video_cur], [video_mem]
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :clamp_to_screen (line 150)
dat 0x701                  ; SET PUSH, B
dat 0x7821,0x521           ; SET B, [video_width]
dat 0x7824,0x522           ; MUL B, [video_height]
dat 0x7822,0x51b           ; ADD B, [video_mem]
dat 0x414                  ; IFG A, B
dat 0x401                  ; SET A, B
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :char_put (line 167)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7824,0x521           ; MUL B, [video_width]
dat 0x402                  ; ADD A, B
dat 0x7802,0x51b           ; ADD A, [video_mem]
dat 0x7c20,0x70e           ; JSR clamp_to_screen
dat 0x901                  ; SET [A], C
; :char_put_end (line 176)
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :char_get (line 185)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7824,0x521           ; MUL B, [video_width]
dat 0x402                  ; ADD A, B
dat 0x7802,0x51b           ; ADD A, [video_mem]
dat 0x7c20,0x70e           ; JSR clamp_to_screen
dat 0x2041                 ; SET C, [A]
; :char_get_end (line 194)
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :itoa (line 205)
dat 0x1b01                 ; SET PUSH, I
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7cc1,0x0             ; SET I, 0
; :itoa_0 (line 212)
dat 0x7cc2,0x1             ; ADD I, 1
dat 0x806                  ; DIV A, C
dat 0x7c13,0x0             ; IFN A, 0
dat 0x7f81,0x738           ; SET PC, itoa_0
dat 0x1822                 ; ADD B, I
dat 0x7d21,0x0             ; SET [B], 0
dat 0x6401                 ; SET A, PEEK
; :itoa_1 (line 221)
dat 0x7c23,0x1             ; SUB B, 1
dat 0xc1                   ; SET I, A
dat 0x8c8                  ; MOD I, C
dat 0x806                  ; DIV A, C
dat 0x7cd4,0x9             ; IFG I, 9
dat 0x7cc2,0x7             ; ADD I, 7
dat 0x7cc2,0x30            ; ADD I, 0x30
dat 0x1921                 ; SET [B], I
dat 0x7c13,0x0             ; IFN A, 0
dat 0x7f81,0x743           ; SET PC, itoa_1
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x60c1                 ; SET I, POP
dat 0x6381                 ; SET PC, POP
; :atoi (line 239)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7c41,0x0             ; SET C, 0
; :atoi_loop (line 244)
dat 0x7d12,0x0             ; IFE [A], 0
dat 0x7f81,0x76d           ; SET PC, atoi_end
dat 0x2021                 ; SET B, [A]
dat 0x7c23,0x30            ; SUB B, 48
dat 0x442                  ; ADD C, B
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7d12,0x0             ; IFE [A], 0
dat 0x7f81,0x76d           ; SET PC, atoi_end
dat 0x7c44,0xa             ; MUL C, 10
dat 0x7f81,0x75b           ; SET PC, atoi_loop
; :atoi_end (line 262)
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :pusha (line 268)
dat 0x63c1,0x78a           ; SET [pushpop_buffer], POP
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0xf01                  ; SET PUSH, X
dat 0x1301                 ; SET PUSH, Y
dat 0x1701                 ; SET PUSH, Z
dat 0x1b01                 ; SET PUSH, I
dat 0x1f01                 ; SET PUSH, J
dat 0x7701                 ; SET PUSH, EX
dat 0x7b81,0x78a           ; SET PC, [pushpop_buffer]
; :popa (line 284)
dat 0x63c1,0x78a           ; SET [pushpop_buffer], POP
dat 0x63a1                 ; SET EX, POP
dat 0x60e1                 ; SET J, POP
dat 0x60c1                 ; SET I, POP
dat 0x60a1                 ; SET Z, POP
dat 0x6081                 ; SET Y, POP
dat 0x6061                 ; SET X, POP
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x7b81,0x78a           ; SET PC, [pushpop_buffer]
; :pushpop_buffer dat 0x0000 (line 299)
dat 0x0                    ; .dat 0x0000
; :strcpy (line 304)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
; :strcpy_loop (line 307)
dat 0x2121                 ; SET [B], [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7d13,0x0             ; IFN [A], 0
dat 0x7f81,0x78d           ; SET PC, strcpy_loop
; :strcpy_end (line 313)
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :strncpy (line 323)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x442                  ; ADD C, B
; :strncpy_loop1 (line 329)
dat 0x7d12,0x0             ; IFE [A], 0
dat 0x7f81,0x7ab           ; SET PC, strncpy_loop2
dat 0x2121                 ; SET [B], [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x832                  ; IFE B, C
dat 0x7f81,0x7b2           ; SET PC, strncpy_end
dat 0x7f81,0x79d           ; SET PC, strncpy_loop1
; :strncpy_loop2 (line 339)
dat 0x7d21,0x0             ; SET [B], 0
dat 0x7c22,0x1             ; ADD B, 1
dat 0x833                  ; IFN B, C
dat 0x7f81,0x7ab           ; SET PC, strncpy_loop2
; :strncpy_end (line 345)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :strcmp (line 360)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7fa1,0x0             ; SET EX, 0
dat 0x7c41,0x0             ; SET C, 0
; :strcmp_loop (line 365)
dat 0x7d12,0x0             ; IFE [A], 0
dat 0x7f81,0x7c9           ; SET PC, strcmp_end
dat 0x2513                 ; IFN [A], [B]
dat 0x7f81,0x7c9           ; SET PC, strcmp_end
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7f81,0x7bc           ; SET PC, strcmp_loop
; :strcmp_end (line 374)
dat 0x2041                 ; SET C, [A]
dat 0x2443                 ; SUB C, [B]
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :strlen (line 384)
dat 0x301                  ; SET PUSH, A
dat 0x7c21,0x0             ; SET B, 0
; :strlen_loop (line 388)
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7d13,0x0             ; IFN [A], 0
dat 0x7f81,0x7d1           ; SET PC, strlen_loop
; :strlen_end (line 392)
dat 0x21                   ; SET B, A
dat 0x6423                 ; SUB B, PEEK
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :read_line (line 403)
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0x876           ; JSR mem_clear
dat 0x22                   ; ADD B, A
; :read_line_loop (line 412)
dat 0x7d00,0xfedc          ; INT 0xFEDC
dat 0x7d52,0x11            ; IFE [C], 0x11
dat 0x7f81,0x845           ; SET PC, read_line_end
dat 0x7d52,0x10            ; IFE [C], 0x10
dat 0x7f81,0x823           ; SET PC, read_line_backspace
dat 0x2bf4,0x20            ; IFG 0x20, [C]
dat 0x7f81,0x811           ; SET PC, read_line_skip
dat 0x7d54,0x7f            ; IFG [C], 0x7F
dat 0x7f81,0x811           ; SET PC, read_line_skip
dat 0x412                  ; IFE A, B
dat 0x7f81,0x811           ; SET PC, read_line_skip
dat 0x2901                 ; SET [A], [C]
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x2021                 ; SET B, [A]
dat 0x7c2b,0x7400          ; BOR B, 0x7400
dat 0x401                  ; SET A, B
dat 0x7821,0x51f           ; SET B, [video_cur]
dat 0x121                  ; SET [B], A
dat 0x7fc2,0x1,0x51f       ; ADD [video_cur], 1
dat 0x7801,0x521           ; SET A, [video_width]
dat 0x7804,0x522           ; MUL A, [video_height]
dat 0x7802,0x51b           ; ADD A, [video_mem]
dat 0x3d2,0x51f            ; IFE [video_cur], A
dat 0x7c20,0x6be           ; JSR scroll
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x7c02,0x1             ; ADD A, 1
; :read_line_skip (line 449)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7801,0x51f           ; SET A, [video_cur]
dat 0x7803,0x51b           ; SUB A, [video_mem]
dat 0x7c21,0x0             ; SET B, 0
dat 0x7c41,0x709f          ; SET C, 0x709F
dat 0x7c20,0x719           ; JSR char_put
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x7f81,0x7e1           ; SET PC, read_line_loop
; :read_line_backspace (line 465)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7801,0x51f           ; SET A, [video_cur]
dat 0x7803,0x51b           ; SUB A, [video_mem]
dat 0x7c21,0x0             ; SET B, 0
dat 0x7841,0x520           ; SET C, [video_clear]
dat 0x7c20,0x719           ; JSR char_put
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6412                 ; IFE A, PEEK
dat 0x7f81,0x811           ; SET PC, read_line_skip
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7fc3,0x1,0x51f       ; SUB [video_cur], 1
dat 0x7821,0x51f           ; SET B, [video_cur]
dat 0x7d21,0x0             ; SET [B], 0
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x7c03,0x1             ; SUB A, 1
dat 0x7f81,0x811           ; SET PC, read_line_skip
; :read_line_end (line 493)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7801,0x51f           ; SET A, [video_cur]
dat 0x7803,0x51b           ; SUB A, [video_mem]
dat 0x7c21,0x0             ; SET B, 0
dat 0x7841,0x520           ; SET C, [video_clear]
dat 0x7c20,0x719           ; JSR char_put
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x7d01,0x0             ; SET [A], 0
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6041                 ; SET C, POP
dat 0x6381                 ; SET PC, POP
; :sleep (line 519)
dat 0x7c04,0x14            ; MUL A, 20
; :sleep_loop (line 521)
dat 0x7c03,0x1             ; SUB A, 1
dat 0x7c13,0x0             ; IFN A, 0
dat 0x7f81,0x85d           ; SET PC, sleep_loop
dat 0x6381                 ; SET PC, POP
; :rand (line 528)
dat 0x7fc4,0xcc29,0x44d    ; MUL [entropy], 52265
dat 0x7fc2,0x87,0x44d      ; ADD [entropy], 135
dat 0x7801,0x44d           ; SET A, [entropy]
dat 0x6381                 ; SET PC, POP
; :srand (line 535)
dat 0x7c04,0xc263          ; MUL A, 49763
dat 0x7c0f,0x2             ; SHL A, 2
dat 0x7c0c,0x4f9           ; XOR A, 1273
dat 0x3c1,0x44d            ; SET [entropy], A
dat 0x6381                 ; SET PC, POP
; =====Begin file: memory.dasm16
; :mem_clear (line 5)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x22                   ; ADD B, A
; :mem_clear_loop (line 11)
dat 0x7d01,0x0             ; SET [A], 0
dat 0x7c02,0x1             ; ADD A, 1
dat 0x413                  ; IFN A, B
dat 0x7f81,0x879           ; SET PC, mem_clear_loop
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :mem_copy (line 27)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x1b01                 ; SET PUSH, I
dat 0x1f01                 ; SET PUSH, J
dat 0x42                   ; ADD C, A
dat 0x4c1                  ; SET I, B
dat 0xe1                   ; SET J, A
; :mem_copy_loop (line 41)
dat 0x3dde                 ; STI [I], [J]
dat 0x8f3                  ; IFN J, C
dat 0x7f81,0x88b           ; SET PC, mem_copy_loop
dat 0x60e1                 ; SET J, POP
dat 0x60c1                 ; SET I, POP
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :page_reserve (line 54)
dat 0x701                  ; SET PUSH, B
dat 0x21                   ; SET B, A
dat 0x7c28,0x400           ; MOD B, 1024
dat 0x403                  ; SUB A, B
dat 0x7c06,0x400           ; DIV A, 1024
dat 0x7c20,0x8a8           ; JSR page_remove
dat 0x7c21,0x1             ; SET B, 0x0001
dat 0x7c20,0x8c1           ; JSR page_combine
dat 0x7c0b,0x8000          ; BOR A, 0x8000
dat 0x7c20,0x8d3           ; JSR page_add
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :page_remove (line 72)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7c0a,0x3f            ; AND A, 0x003F
dat 0x7c0f,0x8             ; SHL A, 8
dat 0x301                  ; SET PUSH, A
dat 0x7c21,0x10e           ; SET B, page_table
; :page_remove_loop (line 82)
dat 0x2401                 ; SET A, [B]
dat 0x7c0a,0x3f00          ; AND A, 0x3F00
dat 0x6412                 ; IFE A, PEEK
dat 0x7d21,0x0             ; SET [B], 0x0000
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c33,0x18e           ; IFN B, page_table_end
dat 0x7f81,0x8b1           ; SET PC, page_remove_loop
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :page_combine (line 99)
dat 0x701                  ; SET PUSH, B
dat 0x7c0a,0x3f            ; AND A, 0x003F
dat 0x7c0f,0x8             ; SHL A, 8
dat 0x7c2a,0xff            ; AND B, 0x00FF
dat 0x40b                  ; BOR A, B
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :page_decombine (line 113)
dat 0x21                   ; SET B, A
dat 0x7c0d,0x8             ; SHR A, 8
dat 0x7c0a,0x3f            ; AND A, 0x003F
dat 0x7c2a,0xff            ; AND B, 0x00FF
dat 0x6381                 ; SET PC, POP
; :page_add (line 125)
dat 0x701                  ; SET PUSH, B
dat 0x7c21,0x10e           ; SET B, page_table
; :page_add_loop (line 129)
dat 0x7d32,0x0             ; IFE [B], 0
dat 0x7f81,0x8e4           ; SET PC, page_add_set
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c33,0x18e           ; IFN B, page_table_end
dat 0x7f81,0x8d6           ; SET PC, page_add_loop
dat 0x7c01,0x0             ; SET A, 0
; :page_add_end (line 139)
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :page_add_set (line 143)
dat 0x121                  ; SET [B], A
dat 0x7c20,0x8cb           ; JSR page_decombine
dat 0x7c20,0x9b5           ; JSR page_set_map
dat 0x7c01,0x1             ; SET A, 1
dat 0x7f81,0x8e2           ; SET PC, page_add_end
; :page_find_free (line 154)
dat 0x701                  ; SET PUSH, B
dat 0x7c01,0x10a           ; SET A, page_map
dat 0x7c21,0x0             ; SET B, 0
dat 0x7d13,0xffff          ; IFN [A], 0xFFFF
dat 0x7f81,0x912           ; SET PC, page_find_free_found
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7d13,0xffff          ; IFN [A], 0xFFFF
dat 0x7f81,0x912           ; SET PC, page_find_free_found
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7d13,0xffff          ; IFN [A], 0xFFFF
dat 0x7f81,0x912           ; SET PC, page_find_free_found
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7d13,0xffff          ; IFN [A], 0xFFFF
dat 0x7f81,0x912           ; SET PC, page_find_free_found
dat 0x7c01,0x0             ; SET A, 0
; :page_find_free_end (line 181)
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :page_find_free_found (line 186)
dat 0x2301                 ; SET PUSH, [A]
dat 0x7c24,0x10            ; MUL B, 16
dat 0x401                  ; SET A, B
; :page_find_free_found_loop (line 193)
dat 0x7f2d,0x1             ; SHR PEEK, 1
dat 0x7fb3,0x0             ; IFN EX, 0x0000
dat 0x7f81,0x920           ; SET PC, page_find_free_skip
dat 0x7f62,0x1             ; ADD SP, 1
dat 0x7f81,0x910           ; SET PC, page_find_free_end
; :page_find_free_skip (line 201)
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7f81,0x916           ; SET PC, page_find_free_found_loop
; :page_alloc (line 208)
dat 0x701                  ; SET PUSH, B
dat 0x7c20,0x8ed           ; JSR page_find_free
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7f81,0x93e           ; SET PC, page_alloc_error
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0xb02           ; JSR proc_id
dat 0x21                   ; SET B, A
dat 0x6401                 ; SET A, PEEK
dat 0x7c20,0x8c1           ; JSR page_combine
dat 0x7c20,0x8d3           ; JSR page_add
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7f81,0x93d           ; SET PC, page_alloc_error2
dat 0x6001                 ; SET A, POP
dat 0x7c04,0x400           ; MUL A, 1024
; :page_alloc_end (line 231)
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :page_alloc_error2 (line 235)
dat 0x6001                 ; SET A, POP
; :page_alloc_error (line 238)
dat 0x7c01,0x0             ; SET A, 0
dat 0x7f81,0x93b           ; SET PC, page_alloc_end
; :page_alloc_big (line 245)
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x21                   ; SET B, A
dat 0x7c23,0x1             ; SUB B, 1
dat 0x7c20,0x924           ; JSR page_alloc
dat 0x301                  ; SET PUSH, A
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7f81,0x962           ; SET PC, page_alloc_big_error
dat 0x7c32,0x0             ; IFE B, 0
dat 0x7f81,0x95e           ; SET PC, page_alloc_big_end
; :page_alloc_big_loop (line 258)
dat 0x7c20,0x924           ; JSR page_alloc
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7f81,0x962           ; SET PC, page_alloc_big_error
dat 0x7c23,0x1             ; SUB B, 1
dat 0x7c33,0x0             ; IFN B, 0
dat 0x7f81,0x952           ; SET PC, page_alloc_big_loop
; :page_alloc_big_end (line 265)
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6041                 ; SET C, POP
dat 0x6381                 ; SET PC, POP
; :page_alloc_big_error (line 270)
dat 0x6001                 ; SET A, POP
dat 0x7c01,0x0             ; SET A, 0
dat 0x301                  ; SET PUSH, A
dat 0x7f81,0x95e           ; SET PC, page_alloc_big_end
; :page_free (line 278)
dat 0x7f81,0x968           ; SET PC, page_free
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x21                   ; SET B, A
dat 0x7c28,0x400           ; MOD B, 1024
dat 0x403                  ; SUB A, B
dat 0x41                   ; SET C, A
dat 0x7c20,0xb02           ; JSR proc_id
dat 0x21                   ; SET B, A
dat 0x801                  ; SET A, C
dat 0x7c20,0x8c1           ; JSR page_combine
dat 0x301                  ; SET PUSH, A
dat 0x7c01,0x10e           ; SET A, page_table
; :page_free_loop (line 299)
dat 0x2021                 ; SET B, [A]
dat 0x7c2a,0x3fff          ; AND B, 0x3FFF
dat 0x6432                 ; IFE B, PEEK
dat 0x7f81,0x98c           ; SET PC, page_free_found
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c13,0x18e           ; IFN A, page_table_end
dat 0x7f81,0x97b           ; SET PC, page_free_loop
; :page_free_end (line 308)
dat 0x6001                 ; SET A, POP
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :page_free_found (line 315)
dat 0x7d01,0x0             ; SET [A], 0x0000
dat 0x7f62,0x3             ; ADD SP, 3
dat 0x6401                 ; SET A, PEEK
dat 0x7f63,0x3             ; SUB SP, 3
dat 0x7c20,0x9e0           ; JSR page_unset_map
dat 0x7f81,0x987           ; SET PC, page_free_end
; :page_free_of (line 329)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c0a,0xff            ; AND A, 0x00FF
dat 0x301                  ; SET PUSH, A
dat 0x7c41,0x10e           ; SET C, page_table
; :page_free_of_loop (line 338)
dat 0x2801                 ; SET A, [C]
dat 0x7c20,0x8cb           ; JSR page_decombine
dat 0x6433                 ; IFN B, PEEK
dat 0x7f81,0x9a9           ; SET PC, page_free_of_loop_skip
dat 0x7d41,0x0             ; SET [C], 0x0000
dat 0x7c20,0x9e0           ; JSR page_unset_map
; :page_free_of_loop_skip (line 353)
dat 0x7c42,0x1             ; ADD C, 1
dat 0x7c53,0x18e           ; IFN C, page_table_end
dat 0x7f81,0x99f           ; SET PC, page_free_of_loop
dat 0x7f62,0x1             ; ADD SP, 1
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :page_set_map (line 367)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7c21,0x1             ; SET B, 0x0001
dat 0x3f4,0x10             ; IFG 16, A
dat 0x7f81,0x9cd           ; SET PC, page_set_map_0
dat 0x3f4,0x20             ; IFG 32, A
dat 0x7f81,0x9d2           ; SET PC, page_set_map_1
dat 0x3f4,0x30             ; IFG 48, A
dat 0x7f81,0x9d9           ; SET PC, page_set_map_2
dat 0x7c03,0x30            ; SUB A, 48
dat 0x2f                   ; SHL B, A
dat 0x7cb,0x10d            ; BOR [page_map3], B
; :page_set_map_end (line 384)
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :page_set_map_0 (line 389)
dat 0x2f                   ; SHL B, A
dat 0x7cb,0x10a            ; BOR [page_map0], B
dat 0x7f81,0x9ca           ; SET PC, page_set_map_end
; :page_set_map_1 (line 394)
dat 0x7c03,0x10            ; SUB A, 16
dat 0x2f                   ; SHL B, A
dat 0x7cb,0x10b            ; BOR [page_map1], B
dat 0x7f81,0x9ca           ; SET PC, page_set_map_end
; :page_set_map_2 (line 400)
dat 0x7c03,0x20            ; SUB A, 32
dat 0x2f                   ; SHL B, A
dat 0x7cb,0x10c            ; BOR [page_map2], B
dat 0x7f81,0x9ca           ; SET PC, page_set_map_end
; :page_unset_map (line 408)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7c21,0x1             ; SET B, 0x0001
dat 0x3f4,0x10             ; IFG 16, A
dat 0x7f81,0x9fa           ; SET PC, page_unset_map_0
dat 0x3f4,0x20             ; IFG 32, A
dat 0x7f81,0xa01           ; SET PC, page_unset_map_1
dat 0x3f4,0x30             ; IFG 48, A
dat 0x7f81,0xa0a           ; SET PC, page_unset_map_2
dat 0x7c03,0x30            ; SUB A, 48
dat 0x2f                   ; SHL B, A
dat 0x7c2c,0xffff          ; XOR B, 0xFFFF
dat 0x7ca,0x10d            ; AND [page_map3], B
; :page_unset_map_end (line 426)
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :page_unset_map_0 (line 431)
dat 0x2f                   ; SHL B, A
dat 0x7c2c,0xffff          ; XOR B, 0xFFFF
dat 0x7ca,0x10a            ; AND [page_map0], B
dat 0x7f81,0x9f7           ; SET PC, page_unset_map_end
; :page_unset_map_1 (line 437)
dat 0x7c03,0x10            ; SUB A, 16
dat 0x2f                   ; SHL B, A
dat 0x7c2c,0xffff          ; XOR B, 0xFFFF
dat 0x7ca,0x10b            ; AND [page_map1], B
dat 0x7f81,0x9f7           ; SET PC, page_unset_map_end
; :page_unset_map_2 (line 444)
dat 0x7c03,0x20            ; SUB A, 32
dat 0x2f                   ; SHL B, A
dat 0x7c2c,0xffff          ; XOR B, 0xFFFF
dat 0x7ca,0x10c            ; AND [page_map2], B
dat 0x7f81,0x9f7           ; SET PC, page_unset_map_end
; :page_check (line 452)
dat 0x701                  ; SET PUSH, B
dat 0x7c21,0x10e           ; SET B, page_table
dat 0x7c01,0x0             ; SET A, 0
; :page_check_loop (line 458)
dat 0x7d33,0x0             ; IFN [B], 0
dat 0x7c02,0x400           ; ADD A, 1024
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c33,0x18e           ; IFN B, page_table_end
dat 0x7f81,0xa18           ; SET PC, page_check_loop
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :page_check_of (line 469)
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x301                  ; SET PUSH, A
dat 0x7c21,0x10e           ; SET B, page_table
dat 0x7c01,0x0             ; SET A, 0
; :page_check_of_loop (line 477)
dat 0x2441                 ; SET C, [B]
dat 0x7c4a,0xff            ; AND C, 0x00FF
dat 0x6452                 ; IFE C, PEEK
dat 0x7c02,0x400           ; ADD A, 1024
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c33,0x18e           ; IFN B, page_table_end
dat 0x7f81,0xa2b           ; SET PC, page_check_of_loop
dat 0x7f62,0x1             ; ADD SP, 1
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; =====Begin file: messages.dasm16
; :msg_queue_reg (line 5)
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c21,0x18e           ; SET B, message_queue_table
; :msg_queue_reg_loop (line 11)
dat 0x2441                 ; SET C, [B]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0xa4e           ; SET PC, msg_queue_reg_found
dat 0x7c33,0x1ae           ; IFN B, message_queue_table_end
dat 0x7f81,0xa40           ; SET PC, msg_queue_reg_loop
dat 0x7c01,0x0             ; SET A, 0
; :msg_queue_reg_end (line 21)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :msg_queue_reg_found (line 26)
dat 0x221,0x1              ; SET [1+B], A
dat 0x7c20,0xb02           ; JSR proc_id
dat 0x7c0f,0x8             ; SHL A, 8
dat 0x121                  ; SET [B], A
dat 0x7c01,0x1             ; SET A, 1
dat 0x7f81,0xa4b           ; SET PC, msg_queue_reg_end
; :msg_queue_rem (line 35)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c20,0xb02           ; JSR proc_id
dat 0x7c21,0x18e           ; SET B, message_queue_table
; :msg_queue_rem_loop (line 44)
dat 0x2441                 ; SET C, [B]
dat 0x7c4d,0x8             ; SHR C, 8
dat 0x53                   ; IFN C, A
dat 0x7f81,0xa6b           ; SET PC, msg_queue_rem_skip
dat 0x7d21,0x0             ; SET [B], 0x0000
dat 0x7e21,0x0,0x1         ; SET [1+B], 0x0000
; :msg_queue_rem_skip (line 53)
dat 0x7c22,0x2             ; ADD B, 2
dat 0x7c33,0x1ae           ; IFN B, message_queue_table_end
dat 0x7f81,0xa60           ; SET PC, msg_queue_rem_loop
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :msg_broadcast (line 67)
dat 0xb01                  ; SET PUSH, C
dat 0x1301                 ; SET PUSH, Y
dat 0x1701                 ; SET PUSH, Z
dat 0x7841,0x18e           ; SET C, [message_queue_table]
; :msg_broadcast_loop (line 74)
dat 0x2881                 ; SET Y, [C]
dat 0x7c93,0x0             ; IFN Y, 0
dat 0x7c20,0xa89           ; JSR msg_send_to
dat 0x7c42,0x2             ; ADD C, 2
dat 0x7c53,0x1ae           ; IFN C, message_queue_table_end
dat 0x7f81,0xa7a           ; SET PC, msg_broadcast_loop
dat 0x60a1                 ; SET Z, POP
dat 0x6081                 ; SET Y, POP
dat 0x6041                 ; SET C, POP
dat 0x6381                 ; SET PC, POP
; :msg_send_to (line 91)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x1b01                 ; SET PUSH, I
dat 0x1f01                 ; SET PUSH, J
dat 0xb01                  ; SET PUSH, C
dat 0x28c1                 ; SET I, [C]
dat 0x18e1                 ; SET J, I
dat 0x7cca,0x2             ; AND I, 0x0002
dat 0x7cd2,0x2             ; IFE I, 0x0002
dat 0x7f81,0xab6           ; SET PC, msg_send_to_end
dat 0x1cc1                 ; SET I, J
dat 0x7ccd,0x1             ; SHR I, 1
dat 0x7ced,0x4             ; SHR J, 4
dat 0x7cca,0xe             ; AND I, 0x000E
dat 0x7cea,0xe             ; AND J, 0x000E
dat 0x4841,0x1             ; SET C, [1+C]
dat 0x8c2                  ; ADD I, C
dat 0x1c1                  ; SET [I], A
dat 0x6c1,0x1              ; SET [1+I], B
dat 0x8c3                  ; SUB I, C
dat 0x7cc2,0x2             ; ADD I, 2
dat 0x7cca,0xe             ; AND I, 0x000E
dat 0x6041                 ; SET C, POP
dat 0x7d4a,0xff03          ; AND [C], 0xFF03
dat 0x1cd2                 ; IFE I, J
dat 0x7d4b,0x2             ; BOR [C], 0x0002
dat 0x7cef,0x4             ; SHL J, 4
dat 0x7ccf,0x1             ; SHL I, 1
dat 0x1ccb                 ; BOR I, J
dat 0x194b                 ; BOR [C], I
; :msg_send_to_end (line 134)
dat 0x60e1                 ; SET J, POP
dat 0x60c1                 ; SET I, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :msg_get_message (line 144)
dat 0xf01                  ; SET PUSH, X
dat 0x1701                 ; SET PUSH, Z
dat 0x7c20,0xb02           ; JSR proc_id
dat 0x7c20,0xae3           ; JSR msg_find_proc_addr
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7f81,0xae0           ; SET PC, msg_get_message_end
dat 0xa1                   ; SET Z, A
dat 0x3461                 ; SET X, [Z]
dat 0x7c6d,0x4             ; SHR X, 4
dat 0x7c6a,0xe             ; AND X, 0x000E
dat 0x5462,0x1             ; ADD X, [1+Z]
dat 0x2c01                 ; SET A, [X]
dat 0x4c21,0x1             ; SET B, [1+X]
dat 0x7d61,0x0             ; SET [X], 0x0000
dat 0x7e61,0x0,0x1         ; SET [1+X], 0x0000
dat 0x5463,0x1             ; SUB X, [1+Z]
dat 0x7c62,0x2             ; ADD X, 2
dat 0x7c6a,0xe             ; AND X, 0x000E
dat 0x7c6f,0x4             ; SHL X, 4
dat 0x7daa,0xff1d          ; AND [Z], 0xFF1D
dat 0xdab                  ; BOR [Z], X
; :msg_get_message_end (line 174)
dat 0x60a1                 ; SET Z, POP
dat 0x6061                 ; SET X, POP
dat 0x6381                 ; SET PC, POP
; :msg_find_proc_addr (line 182)
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x21                   ; SET B, A
dat 0x7c2f,0x8             ; SHL B, 8
dat 0x7c01,0x18e           ; SET A, message_queue_table
; :msg_find_proc_addr_loop (line 190)
dat 0x2041                 ; SET C, [A]
dat 0x7c4a,0xff00          ; AND C, 0xFF00
dat 0x452                  ; IFE C, B
dat 0x7f81,0xaf8           ; SET PC, msg_find_proc_addr_end
dat 0x7c02,0x2             ; ADD A, 2
dat 0x7c13,0x1ae           ; IFN A, message_queue_table_end
dat 0x7f81,0xaea           ; SET PC, msg_find_proc_addr_loop
dat 0x7c01,0x0             ; SET A, 0
; :msg_find_proc_addr_end (line 201)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; =====Begin file: process.dasm16
; :os_version (line 10)
dat 0x7801,0x4             ; SET A, [os_version_main]
dat 0x7821,0x5             ; SET B, [os_version_sub]
dat 0x7841,0x6             ; SET C, [os_version_fix]
dat 0x6381                 ; SET PC, POP
; :proc_id (line 20)
dat 0x7801,0x1ae           ; SET A, [proc_current]
dat 0x6381                 ; SET PC, POP
; :proc_get_addr (line 28)
dat 0x7c20,0xb02           ; JSR proc_id
; :proc_get_addr_of (line 31)
dat 0x7c20,0xb15           ; JSR proc_get_info
dat 0x7c02,0xa             ; ADD A, 10
dat 0x2001                 ; SET A, [A]
dat 0x6381                 ; SET PC, POP
; :proc_get_flags (line 42)
dat 0x7c20,0xb02           ; JSR proc_id
; :proc_get_flags_of (line 45)
dat 0x7c20,0xb17           ; JSR proc_get_info_of
dat 0x7c02,0xb             ; ADD A, 11
dat 0x2001                 ; SET A, [A]
dat 0x6381                 ; SET PC, POP
; :proc_get_info (line 56)
dat 0x7c20,0xb02           ; JSR proc_id
; :proc_get_info_of (line 59)
dat 0x7c04,0xc             ; MUL A, 12
dat 0x7c02,0x1af           ; ADD A, proc_buffer
dat 0x6381                 ; SET PC, POP
; :proc_set_flags (line 68)
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0xb15           ; JSR proc_get_info
dat 0x7c02,0xb             ; ADD A, 11
dat 0x7c13,0xb             ; IFN A, 11
dat 0x6501                 ; SET [A], PEEK
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :proc_set_flags_of (line 82)
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0xb17           ; JSR proc_get_info_of
dat 0x7c02,0xb             ; ADD A, 11
dat 0x7c13,0xb             ; IFN A, 11
dat 0x501                  ; SET [A], B
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :proc_set_flag_active_of (line 95)
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0xb0f           ; JSR proc_get_flags_of
dat 0x7c0b,0x1             ; BOR A, 0x0001
dat 0x21                   ; SET B, A
dat 0x6001                 ; SET A, POP
dat 0x7c20,0xb26           ; JSR proc_set_flags_of
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :proc_reset_flag_active_of (line 112)
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0xb0f           ; JSR proc_get_flags_of
dat 0x7c0a,0xfffe          ; AND A, 0xFFFE
dat 0x21                   ; SET B, A
dat 0x6001                 ; SET A, POP
dat 0x7c20,0xb26           ; JSR proc_set_flags_of
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :proc_flag_is_active_of (line 130)
dat 0x7c20,0xb0f           ; JSR proc_get_flags_of
dat 0x7c0a,0x1             ; AND A, 0x0001
dat 0x6381                 ; SET PC, POP
; :proc_callback_list (line 139)
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c21,0x1bb           ; SET B, proc_table
; :proc_callback_list_loop (line 145)
dat 0x2401                 ; SET A, [B]
dat 0x7c13,0x0             ; IFN A, 0
dat 0x6420                 ; JSR PEEK
dat 0x7c22,0xc             ; ADD B, 12
dat 0x7c33,0x33b           ; IFN B, proc_table_end
dat 0x7f81,0xb51           ; SET PC, proc_callback_list_loop
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :proc_suspend (line 160)
dat 0x7c01,0x2a            ; SET A, 42
dat 0x7d00,0xfedc          ; INT 0xFEDC
dat 0x7c01,0x2a            ; SET A, 42
dat 0x6381                 ; SET PC, POP
; :proc_suspend_interrupt (line 168)
dat 0x7fd2,0x0,0x7         ; IFE [preemptive_enabled], 0
dat 0x7f81,0xb76           ; SET PC, proc_suspend_interrupt_skipstart
dat 0x7fd2,0x0,0xbcd       ; IFE [proc_suspend_param], 0
dat 0x7f81,0xb76           ; SET PC, proc_suspend_interrupt_skipstart
dat 0x6001                 ; SET A, POP
dat 0x6001                 ; SET A, POP
dat 0x63a1                 ; SET EX, POP
dat 0x6001                 ; SET A, POP
dat 0x7fc1,0x0,0xbcd       ; SET [proc_suspend_param], 0
; :proc_suspend_interrupt_skipstart (line 179)
dat 0x7bc1,0x1ae,0x1af     ; SET [proc_buffer], [proc_current]
dat 0x3c1,0x1b0            ; SET [proc_buffer_a], A
dat 0x7c1,0x1b1            ; SET [proc_buffer_b], B
dat 0xbc1,0x1b2            ; SET [proc_buffer_c], C
dat 0xfc1,0x1b3            ; SET [proc_buffer_x], X
dat 0x13c1,0x1b4           ; SET [proc_buffer_y], Y
dat 0x17c1,0x1b5           ; SET [proc_buffer_z], Z
dat 0x1bc1,0x1b6           ; SET [proc_buffer_i], I
dat 0x1fc1,0x1b7           ; SET [proc_buffer_j], J
dat 0x6fc1,0x1b8           ; SET [proc_buffer_sp], SP
dat 0x7b61,0x1c4           ; SET SP, [proc_table10]
dat 0x7c20,0xb15           ; JSR proc_get_info
dat 0x21                   ; SET B, A
dat 0x7c01,0x1af           ; SET A, proc_buffer
dat 0x7c41,0xc             ; SET C, 12
dat 0x7c20,0x883           ; JSR mem_copy
dat 0x401                  ; SET A, B
; :proc_kill_me_hook (line 204)
dat 0x7c02,0xc             ; ADD A, 12
; :proc_suspend_loop (line 206)
dat 0x7c12,0x33b           ; IFE A, proc_table_end
dat 0x7c01,0x1bb           ; SET A, proc_table
dat 0x2061                 ; SET X, [A]
dat 0x7c73,0x0             ; IFN X, 0x0000
dat 0x7f81,0xba6           ; SET PC, proc_suspend_invoke
dat 0x7c02,0xc             ; ADD A, 12
dat 0x7f81,0xb99           ; SET PC, proc_suspend_loop
; :proc_suspend_invoke (line 215)
dat 0x7c21,0x1af           ; SET B, proc_buffer
dat 0x7c20,0x883           ; JSR mem_copy
dat 0x7c01,0x1             ; SET A, 1
dat 0x7c21,0x0             ; SET B, 0
dat 0x7c41,0x4000          ; SET C, 0x4000
dat 0x7c20,0x657           ; JSR kernel_interrupt_debug_clock_ticker
dat 0x7bc1,0x1af,0x1ae     ; SET [proc_current], [proc_buffer]
dat 0x7801,0x1b0           ; SET A, [proc_buffer_a]
dat 0x7821,0x1b1           ; SET B, [proc_buffer_b]
dat 0x7841,0x1b2           ; SET C, [proc_buffer_c]
dat 0x7861,0x1b3           ; SET X, [proc_buffer_x]
dat 0x7881,0x1b4           ; SET Y, [proc_buffer_y]
dat 0x78a1,0x1b5           ; SET Z, [proc_buffer_z]
dat 0x78c1,0x1b6           ; SET I, [proc_buffer_i]
dat 0x78e1,0x1b7           ; SET J, [proc_buffer_j]
dat 0x7b61,0x1b8           ; SET SP, [proc_buffer_sp]
dat 0x7fd3,0x0,0x7         ; IFN [preemptive_enabled], 0
dat 0x7d80,0x0             ; IAQ 0
dat 0x6381                 ; SET PC, POP
; :proc_suspend_param dat 0x0000 (line 243)
dat 0x0                    ; .dat 0x0000
; :proc_load (line 248)
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0xf01                  ; SET PUSH, X
dat 0x1301                 ; SET PUSH, Y
dat 0x1701                 ; SET PUSH, Z
dat 0x1b01                 ; SET PUSH, I
dat 0x1f01                 ; SET PUSH, J
dat 0x7c41,0x0             ; SET C, 0
dat 0x20a1                 ; SET Z, [A]
dat 0x7d13,0x4714          ; IFN [A], 0x4714
dat 0x7f81,0xbe9           ; SET PC, proc_load_start
; :proc_load_handle_exec (line 263)
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c02,0x1             ; ADD A, 1
dat 0x20c1                 ; SET I, [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x20e1                 ; SET J, [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x2041                 ; SET C, [A]
dat 0x7c03,0x4             ; SUB A, 4
; :proc_load_start (line 274)
dat 0x7c61,0x1bb           ; SET X, proc_table
; :proc_load_loop (line 277)
dat 0x7d72,0x0             ; IFE [X], 0x0000
dat 0x7f81,0xbf9           ; SET PC, proc_load_to
dat 0x7c62,0xc             ; ADD X, 12
dat 0x7c73,0x33b           ; IFN X, proc_table_end
dat 0x7f81,0xbeb           ; SET PC, proc_load_loop
; :proc_load_error (line 285)
dat 0x7c01,0x0             ; SET A, 0
dat 0x7f81,0xc5d           ; SET PC, proc_load_end
; :proc_load_to (line 292)
dat 0xd61                  ; SET [X], X
dat 0x7d63,0x1bb           ; SUB [X], proc_table
dat 0x7d66,0xc             ; DIV [X], 12
dat 0x7d62,0x1             ; ADD [X], 1
dat 0xb01                  ; SET PUSH, C
dat 0x441                  ; SET C, B
dat 0x301                  ; SET PUSH, A
dat 0x7cb3,0x4714          ; IFN Z, 0x4714
dat 0x21                   ; SET B, A
dat 0x7cb3,0x4714          ; IFN Z, 0x4714
dat 0x7f81,0xc25           ; SET PC, proc_load_skip_alloc
dat 0x7b01,0x1ae           ; SET PUSH, [proc_current]
dat 0x2fc1,0x1ae           ; SET [proc_current], [X]
dat 0x821                  ; SET B, C
dat 0x7c22,0x80            ; ADD B, 128
dat 0x7c26,0x400           ; DIV B, 1024
dat 0x7c22,0x1             ; ADD B, 1
dat 0x481                  ; SET Y, B
dat 0x401                  ; SET A, B
dat 0x7c20,0x942           ; JSR page_alloc_big
dat 0x63c1,0x1ae           ; SET [proc_current], POP
dat 0x21                   ; SET B, A
dat 0x6401                 ; SET A, PEEK
dat 0x7cb2,0x4714          ; IFE Z, 0x4714
dat 0x1802                 ; ADD A, I
dat 0x7cb2,0x4714          ; IFE Z, 0x4714
dat 0x1c41                 ; SET C, J
dat 0x7c20,0x883           ; JSR mem_copy
; :proc_load_skip_alloc (line 336)
dat 0x6001                 ; SET A, POP
dat 0x6041                 ; SET C, POP
dat 0x7c53,0x0             ; IFN C, 0
dat 0x7c20,0xc68           ; JSR proc_handle_flags
dat 0x7c84,0x400           ; MUL Y, 1024
dat 0x7c83,0x1             ; SUB Y, 1
dat 0x482                  ; ADD Y, B
dat 0x2c01                 ; SET A, [X]
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7d61,0x0             ; SET [X], 0
dat 0x7c62,0x1             ; ADD X, 1
dat 0x1161                 ; SET [X], Y
dat 0x7c62,0x1             ; ADD X, 1
dat 0x561                  ; SET [X], B
dat 0x7c62,0x1             ; ADD X, 1
dat 0x7c4b,0x1             ; BOR C, 0x0001
dat 0x961                  ; SET [X], C
dat 0x581                  ; SET [Y], B
; :proc_load_end (line 383)
dat 0x7fc1,0x1,0x7         ; SET [preemptive_enabled], 1
dat 0x60e1                 ; SET J, POP
dat 0x60c1                 ; SET I, POP
dat 0x60a1                 ; SET Z, POP
dat 0x6081                 ; SET Y, POP
dat 0x6061                 ; SET X, POP
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; :proc_handle_flags (line 397)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x301                  ; SET PUSH, A
dat 0x7c01,0x0             ; SET A, 0
dat 0x7c4a,0x2             ; AND C, 0x0002
dat 0x7c52,0x1             ; IFE C, 1
dat 0x7c20,0x5f4           ; JSR manage_charset
dat 0x6001                 ; SET A, POP
dat 0x6441                 ; SET C, PEEK
dat 0x7c4a,0x1             ; AND C, 0x0001
dat 0x7c52,0x1             ; IFE C, 1
dat 0x7c20,0xc80           ; JSR proc_exec_process_relocation
; :proc_handle_flags_end (line 414)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :proc_exec_process_relocation (line 423)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c02,0x5             ; ADD A, 5
dat 0x2041                 ; SET C, [A]
; :proc_exec_process_relocation_loop (line 429)
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0xc97           ; SET PC, proc_exec_process_relocation_end
dat 0x701                  ; SET PUSH, B
dat 0xf01                  ; SET PUSH, X
dat 0x461                  ; SET X, B
dat 0x7c02,0x1             ; ADD A, 1
dat 0x2022                 ; ADD B, [A]
dat 0xd22                  ; ADD [B], X
dat 0x7c43,0x1             ; SUB C, 1
dat 0x6061                 ; SET X, POP
dat 0x6021                 ; SET B, POP
dat 0x7f81,0xc86           ; SET PC, proc_exec_process_relocation_loop
; :proc_exec_process_relocation_end (line 442)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :proc_kill_me (line 450)
dat 0x7c20,0xb02           ; JSR proc_id
dat 0x61                   ; SET X, A
dat 0x7c20,0xb17           ; JSR proc_get_info_of
dat 0x81                   ; SET Y, A
dat 0x7c02,0xa             ; ADD A, 10
dat 0x20a1                 ; SET Z, [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x2001                 ; SET A, [A]
dat 0x7c0a,0x2             ; AND A, 0x0002
dat 0x7c12,0x1             ; IFE A, 1
dat 0x7c20,0x5f4           ; JSR manage_charset
dat 0x1001                 ; SET A, Y
dat 0x7c21,0xc             ; SET B, 12
dat 0x7c20,0x876           ; JSR mem_clear
dat 0xc01                  ; SET A, X
dat 0x7c20,0x997           ; JSR page_free_of
dat 0x1001                 ; SET A, Y
dat 0x7c41,0xc             ; SET C, 12
dat 0x7f81,0xb97           ; SET PC, proc_kill_me_hook
; :proc_kill (line 475)
dat 0x701                  ; SET PUSH, B
dat 0x1301                 ; SET PUSH, Y
dat 0x1701                 ; SET PUSH, Z
dat 0x301                  ; SET PUSH, A
dat 0x7c20,0xb17           ; JSR proc_get_info_of
dat 0x81                   ; SET Y, A
dat 0x7c02,0xa             ; ADD A, 10
dat 0x20a1                 ; SET Z, [A]
dat 0x1001                 ; SET A, Y
dat 0x7c21,0xc             ; SET B, 12
dat 0x7c20,0x876           ; JSR mem_clear
dat 0x6001                 ; SET A, POP
dat 0x7c20,0x997           ; JSR page_free_of
dat 0x60a1                 ; SET Z, POP
dat 0x6081                 ; SET Y, POP
dat 0x6021                 ; SET B, POP
dat 0x6381                 ; SET PC, POP
; =====Begin file: kernel/core.dasm16
; :kernel_boot (line 17)
dat 0x7c20,0x47d           ; JSR bios_boot
dat 0x7d40,0x610           ; IAS kernel_interrupt_handler
dat 0x7c20,0x6ee           ; JSR clear
dat 0x7c01,0x28            ; SET A, text_logo
dat 0x7c20,0x666           ; JSR text_out
dat 0x7c01,0x8             ; SET A, text_start
dat 0x7c20,0x666           ; JSR text_out
dat 0x7c61,0x0             ; SET X, 0
; :kernel_mem (line 36)
dat 0x7c74,0xd4f           ; IFG X, kernel_end
dat 0x7f81,0xceb           ; SET PC, kernel_mem_end
dat 0xc01                  ; SET A, X
dat 0x7c20,0x895           ; JSR page_reserve
dat 0x7c62,0x400           ; ADD X, 1024
dat 0x7f81,0xce0           ; SET PC, kernel_mem
; :kernel_mem_end (line 43)
dat 0x7c61,0x14d1          ; SET X, os_content
; :os_content_mem (line 47)
dat 0x7c74,0x1df0          ; IFG X, os_content_end
dat 0x7f81,0xcf8           ; SET PC, os_content_mem_end
dat 0xc01                  ; SET A, X
dat 0x7c20,0x895           ; JSR page_reserve
dat 0x7c62,0x400           ; ADD X, 1024
dat 0x7f81,0xced           ; SET PC, os_content_mem
; :os_content_mem_end (line 54)
dat 0x7c01,0xffff          ; SET A, 0xFFFF
dat 0x7c20,0x895           ; JSR page_reserve
dat 0x7c01,0x1000          ; SET A, 0x1000
dat 0x7c20,0x895           ; JSR page_reserve
dat 0x7c61,0x0             ; SET X, 0
dat 0x7c21,0x1000          ; SET B, 0x1000
dat 0x7c01,0x44e           ; SET A, api_start
dat 0x7c41,0x47b           ; SET C, api_end
dat 0x43                   ; SUB C, A
dat 0x7c20,0x883           ; JSR mem_copy
dat 0x7fc1,0x0,0x348       ; SET [keyboard_buffers_exclusive], 0
dat 0x7fc1,0x0,0x349       ; SET [keyboard_oldvalue], 0
dat 0x7c20,0x59d           ; JSR keyboard_unregister_all
dat 0x7c01,0x24            ; SET A, text_start_ok
dat 0x7c20,0x666           ; JSR text_out
; :kernel_loop (line 83)
dat 0x7c20,0x52e           ; JSR driver_keyboard
dat 0x7c20,0xd1f           ; JSR kernel_watchdog_checkalone
dat 0x7d00,0xfedc          ; INT 0xFEDC
dat 0x7f81,0xd17           ; SET PC, kernel_loop
; :kernel_watchdog_checkalone (line 98)
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7c41,0x34a           ; SET C, kernel_watchdog_proc_list_buffer
dat 0x7c01,0xd3c           ; SET A, kernel_watchdog_helper
dat 0x7c20,0xb4d           ; JSR proc_callback_list
dat 0x7c41,0x34a           ; SET C, kernel_watchdog_proc_list_buffer
dat 0x7c42,0x1             ; ADD C, 1
dat 0x7d52,0x0             ; IFE [C], 0
dat 0x7c20,0xd43           ; JSR kernel_watchdog_loadshell
dat 0x7c41,0x34a           ; SET C, kernel_watchdog_proc_list_buffer
dat 0x7d41,0x0             ; SET [C], 0
dat 0x7c42,0x1             ; ADD C, 1
dat 0x7d41,0x0             ; SET [C], 0
dat 0x6001                 ; SET A, POP
dat 0x6021                 ; SET B, POP
dat 0x6041                 ; SET C, POP
dat 0x6381                 ; SET PC, POP
; :kernel_watchdog_helper (line 121)
dat 0x7c52,0x34c           ; IFE C, kernel_watchdog_proc_list_buffer_end
dat 0x6381                 ; SET PC, POP
dat 0x141                  ; SET [C], A
dat 0x7c42,0x1             ; ADD C, 1
dat 0x6381                 ; SET PC, POP
; :kernel_watchdog_loadshell (line 127)
dat 0x7fc1,0xffff,0x349    ; SET [keyboard_oldvalue], 0xFFFF
dat 0x7c01,0x14d1          ; SET A, AtlasShell
dat 0x7c21,0x1b5d          ; SET B, AtlasShell_end
dat 0x7c23,0x14d1          ; SUB B, AtlasShell
dat 0x7c20,0xbce           ; JSR proc_load
dat 0x6381                 ; SET PC, POP
; :kernel_end (line 138)
dat 0x7f81,0xd4f           ; SET PC, kernel_end
; :api_padding (line 141)
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20; .dat "                                                                                                                                "
; :api_padding_end (line 157)
; :os_content (line 160)
; =====Begin file: ../apps/AtlasShell.dasm16
; :AtlasShell (line 3)
dat 0x7c01,0x196e          ; SET A, text_versionoutput
dat 0x7820,0x101e          ; JSR [0x101E]
; :AtlasShell_start (line 6)
dat 0x7c01,0x19be          ; SET A, input_buffer
dat 0x7820,0x1026          ; JSR [0x1026]
; :AtlasShell_loop (line 10)
dat 0x7820,0x1028          ; JSR [0x1028]
dat 0x7c13,0x0             ; IFN A, 0
dat 0x7f81,0x1575          ; SET PC, AtlasShell_loop_wait
dat 0x7c20,0x1934          ; JSR command_clear_present_working_directory_name
dat 0x7801,0x1b3b          ; SET A, [present_working_directory]
dat 0x7820,0x102b          ; JSR [0x102B]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x14f4          ; SET PC, AtlasShell_skip_display_path
dat 0x7c42,0x2             ; ADD C, 2
dat 0x801                  ; SET A, C
dat 0x7c21,0x1b3c          ; SET B, present_working_directory_name
dat 0x7820,0x1017          ; JSR [0x1017]
dat 0x7c01,0x1b3c          ; SET A, present_working_directory_name
dat 0x7820,0x101e          ; JSR [0x101E]
; :AtlasShell_skip_display_path (line 29)
dat 0x7c01,0x1982          ; SET A, text_prompt
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7fc1,0x0,0x19bf      ; SET [ack_command], 0
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c21,0x20            ; SET B, 32
dat 0x7c41,0x19be          ; SET C, input_buffer
dat 0x7820,0x1023          ; JSR [0x1023]
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x7c32,0x0             ; IFE B, 0
dat 0x7f81,0x1575          ; SET PC, AtlasShell_loop_wait
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c21,0x0             ; SET B, 0
dat 0x7c20,0x193f          ; JSR shell_getparameter
dat 0x7c01,0x1ad9          ; SET A, command_clear
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7c20,0x15b4          ; JSR command_clearf
dat 0x7c01,0x1adf          ; SET a, command_version
dat 0x7c21,0x1a47          ; SET b, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE c, 0
dat 0x7c20,0x157e          ; JSR command_versionf
dat 0x7c01,0x1ae7          ; SET a, command_load
dat 0x7c21,0x1a47          ; SET b, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE c, 0
dat 0x7c20,0x15ba          ; JSR command_loadf
dat 0x7c01,0x1aec          ; SET a, command_kill
dat 0x7c21,0x1a47          ; SET b, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE c, 0
dat 0x7c20,0x1639          ; JSR command_killf
dat 0x7c01,0x1af1          ; SET a, command_list
dat 0x7c21,0x1a47          ; SET b, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE c, 0
dat 0x7c20,0x168d          ; JSR command_listf
dat 0x7c01,0x1af6          ; SET A, command_ls
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7c20,0x16e1          ; JSR command_lsf
dat 0x7c01,0x1af9          ; SET A, command_cd
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7c20,0x17c6          ; JSR command_cdf
dat 0x7c01,0x1afc          ; SET A, command_cat
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7c20,0x1865          ; JSR command_catf
dat 0x7c01,0x1b15          ; SET A, command_echo
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7c20,0x18b3          ; JSR command_echof
dat 0x7fd3,0x1,0x19bf      ; IFN [ack_command], 1
dat 0x7c20,0x178e          ; JSR command_runfile
dat 0x7fd3,0x1,0x19bf      ; IFN [ack_command], 1
dat 0x7c20,0x1577          ; JSR command_unknownf
; :AtlasShell_loop_wait (line 124)
dat 0x7f81,0x14d9          ; SET PC, AtlasShell_loop
; :AtlasShell_loop_end (line 129)
; :command_unknownf (line 133)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1987          ; SET a, text_unrecognized
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x6381                 ; SET pc, pop
; :command_versionf (line 140)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7c21,0x10            ; SET B, 16
dat 0x7820,0x1014          ; JSR [0x1014]
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c21,0x1             ; SET B, 1
dat 0x7c20,0x193f          ; JSR shell_getparameter
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x7c32,0x0             ; IFE B, 0
dat 0x7f81,0x15a2          ; SET PC, command_versionf_shell
dat 0x7c01,0x19c0          ; SET A, command_version_os
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x15ac          ; SET PC, command_versionf_os
; :command_versionf_shell (line 167)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x196e          ; SET A, text_versionoutput
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_versionf_os (line 175)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c20,0x18d3          ; JSR command_os_version_display
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_clearf (line 184)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x7820,0x1021          ; JSR [0x1021]
dat 0x6381                 ; SET pc, pop
; :command_loadf (line 190)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c20,0x1912          ; JSR command_clear_parameter_buffer
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c21,0x1             ; SET B, 1
dat 0x7c20,0x193f          ; JSR shell_getparameter
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x7c32,0x0             ; IFE B, 0
dat 0x7f81,0x160e          ; SET PC, command_loadf_help
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7c21,0x1af1          ; SET B, command_list
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IfE C, 0
dat 0x7f81,0x1616          ; SET PC, command_loadf_list
dat 0x7c01,0x1b7f          ; SET A, application_table
; :command_loadf_loop (line 218)
dat 0x7c12,0x1b98          ; IFE A, application_table_end
dat 0x7f81,0x162f          ; SET PC, command_loadf_unknown
dat 0x7c14,0x1b98          ; IFG A, application_table_end
dat 0x7f81,0x162f          ; SET PC, command_loadf_unknown
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x15f3          ; SET PC, command_loadf_loop_end
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x402                  ; ADD A, B
dat 0x7c02,0x3             ; ADD A, 3
dat 0x7f81,0x15dc          ; SET PC, command_loadf_loop
; :command_loadf_loop_end (line 235)
dat 0x301                  ; SET PUSH, A
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x6001                 ; SET A, POP
dat 0x402                  ; ADD A, B
dat 0x7c02,0x1             ; ADD A, 1
dat 0x21                   ; SET B, A
dat 0x7c22,0x1             ; ADD B, 1
dat 0x2001                 ; SET A, [A]
dat 0x2421                 ; SET B, [B]
dat 0x23                   ; SUB B, A
dat 0x7820,0x1007          ; JSR [0x1007]
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7f81,0x162f          ; SET PC, command_loadf_unknown
dat 0x3c1,0x1b3a           ; SET [last_proc], A
dat 0x7f81,0x1635          ; SET PC, command_loadf_end
; :command_loadf_help (line 259)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x19c5          ; SET A, command_load_help
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7f81,0x1635          ; SET PC, command_loadf_end
; :command_loadf_list (line 265)
dat 0x7c20,0x1912          ; JSR command_clear_parameter_buffer
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1b7f          ; SET A, application_table
; :command_loadf_list_loop (line 269)
dat 0x7c12,0x1b98          ; IFE A, application_table_end
dat 0x7f81,0x1635          ; SET PC, command_loadf_end
dat 0x7c14,0x1b98          ; IFG A, application_table_end
dat 0x7f81,0x1635          ; SET PC, command_loadf_end
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x402                  ; ADD A, B
dat 0x7c02,0x3             ; ADD A, 3
dat 0x7f81,0x161c          ; SET PC, command_loadf_list_loop
; :command_loadf_unknown (line 283)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x19db          ; SET A, command_load_unknown
dat 0x7820,0x101e          ; JSR [0x101E]
; :command_loadf_end (line 288)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_killf (line 296)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c20,0x1912          ; JSR command_clear_parameter_buffer
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c21,0x1             ; SET B, 1
dat 0x7c20,0x193f          ; JSR shell_getparameter
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x7c32,0x0             ; IFE B, 0
dat 0x7f81,0x1683          ; SET PC, command_killf_help
dat 0x7c01,0x1a33          ; SET A, command_kill_last
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x167b          ; SET PC, command_killf_last
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x101d          ; JSR [0x101D]
dat 0x7c54,0x20            ; IFG C, 32
dat 0x7c41,0x20            ; SET C, 32
dat 0x301                  ; SET PUSH, A
dat 0x7820,0x1001          ; JSR [0x1001]
dat 0x812                  ; IFE A, C
dat 0x7f81,0x18cb          ; SET PC, AtlasShell_die
dat 0x6001                 ; SET A, POP
dat 0x7c52,0x1             ; IFE C, 1
dat 0x7f81,0x1673          ; SET PC, command_killf_forbidden
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x801                  ; SET A, C
dat 0x7820,0x1006          ; JSR [0x1006]
dat 0x7f81,0x1689          ; SET PC, command_killf_end
; :command_killf_forbidden (line 346)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x19f7          ; SET A, command_kill_forbidden
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7f81,0x1689          ; SET PC, command_killf_end
; :command_killf_last (line 351)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7801,0x1b3a          ; SET A, [last_proc]
dat 0x7820,0x1006          ; JSR [0x1006]
dat 0x7f81,0x1689          ; SET PC, command_killf_end
; :command_killf_help (line 356)
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1a17          ; SET A, command_kill_help
dat 0x7820,0x101e          ; JSR [0x101E]
; :command_killf_end (line 360)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_listf (line 368)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c01,0x1b1a          ; SET A, proc_list_buffer
; :command_listf_clear_proc_list (line 376)
dat 0x7c12,0x1b3a          ; IFE A, proc_list_buffer_end
dat 0x7f81,0x169f          ; SET PC, command_listf_end
dat 0x7d01,0x0             ; SET [A], 0
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7f81,0x1695          ; SET PC, command_listf_clear_proc_list
; :command_listf_end (line 383)
dat 0x7c41,0x1b1a          ; SET C, proc_list_buffer
dat 0x7c01,0x16c7          ; SET A, command_listf_helper
dat 0x7820,0x1009          ; JSR [0x1009]
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1a38          ; SET A, command_list_info
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7c01,0x0             ; SET A, 0
dat 0x7c20,0x16cb          ; JSR command_listf_display_procID
dat 0x7c01,0x1             ; SET A, 1
dat 0x7c20,0x16cb          ; JSR command_listf_display_procID
dat 0x7c01,0x2             ; SET A, 2
dat 0x7c20,0x16cb          ; JSR command_listf_display_procID
dat 0x7c01,0x3             ; SET A, 3
dat 0x7c20,0x16cb          ; JSR command_listf_display_procID
dat 0x7c01,0x4             ; SET A, 4
dat 0x7c20,0x16cb          ; JSR command_listf_display_procID
dat 0x7c01,0x5             ; SET A, 5
dat 0x7c20,0x16cb          ; JSR command_listf_display_procID
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_listf_helper (line 409)
dat 0x141                  ; SET [C], A
dat 0x7c42,0x1             ; ADD C, 1
dat 0x6381                 ; SET PC, POP
; :command_listf_display_procID (line 413)
dat 0x7c20,0x191d          ; JSR command_clear_number_buffer
dat 0x7c21,0x1b1a          ; SET B, proc_list_buffer
dat 0x22                   ; ADD B, A
dat 0x2401                 ; SET A, [B]
dat 0x7c12,0x0             ; IFE A, 0
dat 0x6381                 ; SET PC, POP
dat 0x7c21,0x1a68          ; SET B, command_number_buffer
dat 0x7c41,0xa             ; SET C, 10
dat 0x7820,0x101b          ; JSR [0x101B]
dat 0x7c01,0x1a68          ; SET A, command_number_buffer
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x6381                 ; SET PC, POP
; :command_lsf (line 434)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0xf01                  ; SET PUSH, X
dat 0x1301                 ; SET PUSH, Y
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7820,0x102a          ; JSR [0x102A]
dat 0x2061                 ; SET X, [A]
dat 0x7c81,0x0             ; SET Y, 0
dat 0x7c02,0x1             ; ADD A, 1
; :command_lsf_loop (line 446)
dat 0xc92                  ; IFE Y, X
dat 0x7f81,0x1788          ; SET PC, command_lsf_end
dat 0x7c82,0x1             ; ADD Y, 1
dat 0x301                  ; SET PUSH, A
dat 0x2041                 ; SET C, [A]
dat 0x7801,0x1b3b          ; SET A, [present_working_directory]
dat 0x53                   ; IFN C, A
dat 0x7f81,0x1781          ; SET PC, command_lsf_skip_file
dat 0x6001                 ; SET A, POP
dat 0x7c41,0x1a6e          ; SET C, command_ls_row
dat 0x7c42,0x20            ; ADD C, 32
dat 0x7c21,0x1a6e          ; SET B, command_ls_row
; :command_lsf_clearrow (line 462)
dat 0x7d21,0x20            ; SET [B], 0x20
dat 0x7c22,0x1             ; ADD B, 1
dat 0x833                  ; IFN B, C
dat 0x7f81,0x1705          ; SET PC, command_lsf_clearrow
dat 0x7c21,0x1a6e          ; SET B, command_ls_row
dat 0x7c02,0x1             ; ADD A, 1
dat 0x2041                 ; SET C, [A]
dat 0x7c4a,0x1             ; AND C, 0x0001
dat 0x7c52,0x1             ; IFE C, 1
dat 0x7d21,0x52            ; SET [B], 0x52
dat 0x7c22,0x1             ; ADD B, 1
dat 0x2041                 ; SET C, [A]
dat 0x7c4a,0x2             ; AND C, 0x0002
dat 0x7c52,0x2             ; IFE C, 2
dat 0x7d21,0x57            ; SET [B], 0x57
dat 0x7c22,0x1             ; ADD B, 1
dat 0x2041                 ; SET C, [A]
dat 0x7c4a,0x8             ; AND C, 0x0008
dat 0x7c52,0x8             ; IFE C, 8
dat 0x7d21,0x45            ; SET [B], 0x45
dat 0x7c22,0x1             ; ADD B, 1
dat 0x2041                 ; SET C, [A]
dat 0x7c4a,0x4             ; AND C, 0x0004
dat 0x7c52,0x4             ; IFE C, 4
dat 0x7d21,0x48            ; SET [B], 0x48
dat 0x2041                 ; SET C, [A]
dat 0x7c4a,0x10            ; AND C, 0x0010
dat 0x7c52,0x10            ; IFE C, 16
dat 0x7d21,0x44            ; SET [B], 0x44
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7d21,0x7c            ; SET [B], 0x7C
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7820,0x1017          ; JSR [0x1017]
dat 0x7c22,0x10            ; ADD B, 16
dat 0x7c02,0x10            ; ADD A, 16
dat 0x7d21,0x7c            ; SET [B], 0x7C
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c52,0x10            ; IFE C, 16
dat 0x7f81,0x1775          ; SET PC, command_lsf_skip_filesize
dat 0xb01                  ; SET PUSH, C
dat 0x2041                 ; SET C, [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x2001                 ; SET A, [A]
dat 0x803                  ; SUB A, C
dat 0x7c21,0x1a68          ; SET B, command_number_buffer
dat 0x7c41,0xa             ; SET C, 10
dat 0x7820,0x101b          ; JSR [0x101B]
dat 0x7c01,0x5             ; SET A, 5
; :command_lsf_filesize_sanitize (line 535)
dat 0x7d32,0x0             ; IFE [B], 0
dat 0x7d21,0x20            ; SET [B], 32
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c03,0x1             ; SUB A, 1
dat 0x7c13,0x0             ; IFN A, 0
dat 0x7f81,0x175f          ; SET PC, command_lsf_filesize_sanitize
dat 0x7c01,0x1a68          ; SET A, command_number_buffer
dat 0x6421                 ; SET B, PEEK
dat 0x7c41,0x5             ; SET C, 5
dat 0x7820,0x1018          ; JSR [0x1018]
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6041                 ; SET C, POP
; :command_lsf_skip_filesize (line 550)
dat 0x7c52,0x10            ; IFE C, 16
dat 0x7c02,0x1             ; ADD A, 1
dat 0x301                  ; SET PUSH, A
dat 0x7c01,0x1a6e          ; SET A, command_ls_row
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x6001                 ; SET A, POP
dat 0x7f81,0x1784          ; SET PC, command_lsf_skip_file_end
; :command_lsf_skip_file (line 559)
dat 0x6001                 ; SET A, POP
dat 0x7c02,0x13            ; ADD A, 19
; :command_lsf_skip_file_end (line 562)
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7f81,0x16f2          ; SET PC, command_lsf_loop
; :command_lsf_end (line 567)
dat 0x6081                 ; SET Y, POP
dat 0x6061                 ; SET X, POP
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_runfile (line 576)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x1029          ; JSR [0x1029]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x17c2          ; SET PC, command_runfile_end
dat 0x2801                 ; SET A, [C]
dat 0x7813,0x1b3b          ; IFN A, [present_working_directory]
dat 0x7f81,0x17c2          ; SET PC, command_runfile_end
dat 0x7c42,0x1             ; ADD C, 1
dat 0x2801                 ; SET A, [C]
dat 0x7c0a,0x8             ; AND A, 0x0008
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7f81,0x17bb          ; SET PC, command_runfile_notexe
dat 0x7c42,0x1             ; ADD C, 1
dat 0x7c42,0x10            ; ADD C, 16
dat 0x2801                 ; SET A, [C]
dat 0x7c42,0x1             ; ADD C, 1
dat 0x2821                 ; SET B, [C]
dat 0x23                   ; SUB B, A
dat 0x7820,0x1007          ; JSR [0x1007]
dat 0x7c13,0x0             ; IFN A, 0
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x7f81,0x17c2          ; SET PC, command_runfile_end
; :command_runfile_notexe (line 609)
dat 0x7c01,0x1ac1          ; SET A, command_runfile_notexe_text
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
; :command_runfile_end (line 613)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_cdf (line 619)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c21,0x1             ; SET B, 1
dat 0x7c20,0x193f          ; JSR shell_getparameter
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7c21,0x1af9          ; SET B, command_cd
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x1802          ; SET PC, command_cdf_help
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x1019          ; JSR [0x1019]
dat 0x7c32,0x0             ; IFE B, 0
dat 0x7f81,0x1802          ; SET PC, command_cdf_help
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7c21,0x1a8f          ; SET B, command_cd_back
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x1808          ; SET PC, command_cdf_back
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7c21,0x1a92          ; SET B, command_cd_root
dat 0x7820,0x101a          ; JSR [0x101A]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x1822          ; SET PC, command_cdf_root
dat 0x7820,0x1029          ; JSR [0x1029]
dat 0x7c53,0x0             ; IFN C, 0
dat 0x7f81,0x183b          ; SET PC, command_cdf_cd
dat 0x7f81,0x1831          ; SET PC, command_cdf_unknown
; :command_cdf_help (line 664)
dat 0x7c01,0x1a94          ; SET A, command_cd_help
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7f81,0x185f          ; SET PC, command_cdf_end
; :command_cdf_back (line 669)
dat 0x7c01,0x1b5d          ; SET A, directory_stack_end
dat 0x7c03,0x1             ; SUB A, 1
; :command_cdf_back_traverse_directorystack (line 672)
dat 0x7c12,0x1b4d          ; IFE A, directory_stack
dat 0x7f81,0x1818          ; SET PC, command_cdf_back_end
dat 0x7d13,0x0             ; IFN [A], 0
dat 0x7f81,0x1818          ; SET PC, command_cdf_back_end
dat 0x7c03,0x1             ; SUB A, 1
dat 0x7f81,0x180c          ; SET PC, command_cdf_back_traverse_directorystack
; :command_cdf_back_end (line 679)
dat 0x7d01,0x0             ; SET [A], 0
dat 0x7c13,0x1b4d          ; IFN A, directory_stack
dat 0x7c03,0x1             ; SUB A, 1
dat 0x23c1,0x1b3b          ; SET [present_working_directory], [A]
dat 0x7f81,0x185f          ; SET PC, command_cdf_end
; :command_cdf_root (line 686)
dat 0x7fc1,0x0,0x1b3b      ; SET [present_working_directory], 0x0000
dat 0x7c01,0x1b4d          ; SET A, directory_stack
; :command_cdf_root_clear_directorystack (line 689)
dat 0x7c12,0x1b5d          ; IFE A, directory_stack_end
dat 0x7f81,0x185f          ; SET PC, command_cdf_end
dat 0x7d01,0x0             ; SET [A], 0
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7f81,0x1827          ; SET PC, command_cdf_root_clear_directorystack
; :command_cdf_unknown (line 696)
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7c01,0x1ab2          ; SET A, command_cd_unknown
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7f81,0x185f          ; SET PC, command_cdf_end
; :command_cdf_cd (line 703)
dat 0x7953,0x1b3b          ; IFN [C], [present_working_directory]
dat 0x7f81,0x1831          ; SET PC, command_cdf_unknown
dat 0x7c42,0x1             ; ADD C, 1
dat 0x2801                 ; SET A, [C]
dat 0x7c0a,0x10            ; AND A, 0x0010
dat 0x7c13,0x10            ; IFN A, 16
dat 0x7f81,0x1831          ; SET PC, command_cdf_unknown
dat 0x7c42,0x1             ; ADD C, 1
dat 0x801                  ; SET A, C
dat 0x7c42,0x10            ; ADD C, 16
dat 0x7c21,0x1b4d          ; SET B, directory_stack
; :command_cdf_cd_addtodirectorystack (line 717)
dat 0x7c32,0x1b5d          ; IFE B, directory_stack_end
dat 0x7f81,0x185f          ; SET PC, command_cdf_end
dat 0x7d32,0x0             ; IFE [B], 0
dat 0x7f81,0x185b          ; SET PC, command_cdf_cd_addtodirectorystack_end
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7f81,0x184f          ; SET PC, command_cdf_cd_addtodirectorystack
; :command_cdf_cd_addtodirectorystack_end (line 724)
dat 0x2801                 ; SET A, [C]
dat 0x121                  ; SET [B], A
dat 0x3c1,0x1b3b           ; SET [present_working_directory], A
; :command_cdf_end (line 729)
dat 0x7c20,0x1912          ; JSR command_clear_parameter_buffer
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_catf (line 736)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c21,0x1             ; SET B, 1
dat 0x7c20,0x193f          ; JSR shell_getparameter
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x1029          ; JSR [0x1029]
dat 0x7c52,0x0             ; IFE C, 0
dat 0x7f81,0x18aa          ; SET PC, command_catf_end
dat 0x2801                 ; SET A, [C]
dat 0x7813,0x1b3b          ; IFN A, [present_working_directory]
dat 0x7f81,0x18aa          ; SET PC, command_catf_end
dat 0x7c42,0x1             ; ADD C, 1
dat 0x2801                 ; SET A, [C]
dat 0x7c0a,0x8             ; AND A, 0x0008
dat 0x7c13,0x0             ; IFN A, 0
dat 0x7f81,0x18aa          ; SET PC, command_catf_end
dat 0x7c42,0x11            ; ADD C, 17
dat 0x2801                 ; SET A, [C]
dat 0x7c42,0x1             ; ADD C, 1
dat 0x2821                 ; SET B, [C]
dat 0x23                   ; SUB B, A
dat 0x701                  ; SET PUSH, B
dat 0x301                  ; SET PUSH, A
dat 0x7820,0x100f          ; JSR [0x100F]
dat 0x41                   ; SET C, A
dat 0x6001                 ; SET A, POP
dat 0x821                  ; SET B, C
dat 0x6041                 ; SET C, POP
dat 0x7c4a,0x3ff           ; AND C, 0x03FF
dat 0x7820,0x1013          ; JSR [0x1013]
dat 0x401                  ; SET A, B
; :command_catf_sanitize (line 778)
dat 0x7d32,0x0             ; IFE [B], 0
dat 0x7d21,0x20            ; SET [B], 32
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7c43,0x1             ; SUB C, 1
dat 0x7c53,0x0             ; IFN C, 0
dat 0x7f81,0x189a          ; SET PC, command_catf_sanitize
dat 0x7d21,0x0             ; SET [B], 0
dat 0x7820,0x101e          ; JSR [0x101E]
; :command_catf_end (line 789)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_echof (line 798)
dat 0x7fc1,0x1,0x19bf      ; SET [ack_command], 1
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7c01,0x199d          ; SET A, input_text_buffer
dat 0x7c02,0x5             ; ADD A, 5
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
dat 0x7820,0x1017          ; JSR [0x1017]
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :AtlasShell_die (line 817)
dat 0x7c01,0x19be          ; SET A, input_buffer
dat 0x7820,0x1027          ; JSR [0x1027]
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x7820,0x1005          ; JSR [0x1005]
; :command_os_version_display (line 826)
dat 0x7c20,0x191d          ; JSR command_clear_number_buffer
dat 0x7c01,0x0             ; SET A, 0
dat 0x7c21,0x0             ; SET B, 0
dat 0x7c41,0x0             ; SET C, 0
dat 0x7820,0x1000          ; JSR [0x1000]
dat 0xb01                  ; SET PUSH, C
dat 0x701                  ; SET PUSH, B
dat 0x7c04,0x2710          ; MUL A, 10000
dat 0x7c21,0x1a68          ; SET B, command_number_buffer
dat 0x7c41,0xa             ; SET C, 10
dat 0x7820,0x101b          ; JSR [0x101B]
dat 0x7c12,0x0             ; IFE A, 0
dat 0x7d21,0x30            ; SET [B], 0x0030
dat 0x7c01,0x1a68          ; SET A, command_number_buffer
dat 0x6021                 ; SET B, POP
dat 0x401                  ; SET A, B
dat 0x7c04,0x64            ; MUL A, 100
dat 0x7c21,0x1a68          ; SET B, command_number_buffer
dat 0x7c41,0xa             ; SET C, 10
dat 0x7820,0x101b          ; JSR [0x101B]
dat 0x7c01,0x1a68          ; SET A, command_number_buffer
dat 0x6041                 ; SET C, POP
dat 0x801                  ; SET A, C
dat 0x7c21,0x1a68          ; SET B, command_number_buffer
dat 0x7c41,0xa             ; SET C, 10
dat 0x7820,0x101b          ; JSR [0x101B]
dat 0x7c01,0x1a68          ; SET A, command_number_buffer
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7901,0x19c3          ; SET [A], [command_version_separator]
dat 0x7c02,0x2             ; ADD A, 2
dat 0x7901,0x19c3          ; SET [A], [command_version_separator]
dat 0x7c01,0x1a68          ; SET A, command_number_buffer
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7820,0x101f          ; JSR [0x101F]
dat 0x6381                 ; SET PC, POP
; :command_clear_parameter_buffer (line 864)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7c01,0x1a47          ; SET A, command_parameter_buffer
dat 0x7c21,0x20            ; SET B, 32
dat 0x7820,0x1014          ; JSR [0x1014]
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_clear_number_buffer (line 874)
dat 0x301                  ; SET PUSH, A
dat 0x7c01,0x1a68          ; SET A, command_number_buffer
dat 0x7d01,0x20            ; SET [A], 32
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7d01,0x20            ; SET [A], 32
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7d01,0x20            ; SET [A], 32
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7d01,0x20            ; SET [A], 32
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7d01,0x20            ; SET [A], 32
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :command_clear_present_working_directory_name (line 889)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0x7c01,0x1b3c          ; SET A, present_working_directory_name
dat 0x7c21,0x10            ; SET B, 16
dat 0x7820,0x1014          ; JSR [0x1014]
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :shell_getparameter (line 902)
dat 0x301                  ; SET PUSH, A
dat 0x701                  ; SET PUSH, B
dat 0xb01                  ; SET PUSH, C
dat 0x7c41,0x0             ; SET C, 0
; :shell_getparameter_loop (line 908)
dat 0x452                  ; IFE C, B
dat 0x7f81,0x1953          ; SET PC, shell_getparameter_save
dat 0x7d12,0x20            ; IFE [A], 32
dat 0x7c42,0x1             ; ADD C, 1
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7d12,0x0             ; IFE [A], 0
dat 0x7f81,0x196a          ; SET PC, shell_getparameter_end
dat 0x7f81,0x1944          ; SET PC, shell_getparameter_loop
; :shell_getparameter_save (line 917)
dat 0x7c21,0x1a47          ; SET B, command_parameter_buffer
; :shell_getparameter_save_loop (line 919)
dat 0x7d21,0x0             ; SET [B], 0
dat 0x7d12,0x20            ; IFE [A], 32
dat 0x7f81,0x196a          ; SET PC, shell_getparameter_end
dat 0x7d12,0x0             ; IFE [A], 0
dat 0x7f81,0x196a          ; SET PC, shell_getparameter_end
dat 0x7d12,0xa             ; IFE [A], 10
dat 0x7f81,0x196a          ; SET PC, shell_getparameter_end
dat 0x2121                 ; SET [B], [A]
dat 0x7c02,0x1             ; ADD A, 1
dat 0x7c22,0x1             ; ADD B, 1
dat 0x7f81,0x1955          ; SET PC, shell_getparameter_save_loop
; :shell_getparameter_end (line 931)
dat 0x6041                 ; SET C, POP
dat 0x6021                 ; SET B, POP
dat 0x6001                 ; SET A, POP
dat 0x6381                 ; SET PC, POP
; :text_versionoutput dat "Atlas-Shell v0.4.2", 0xA0, 0x00 (line 938)
dat 0x41,0x74,0x6c,0x61,0x73,0x2d,0x53,0x68,0x65,0x6c,0x6c,0x20,0x76,0x30,0x2e,0x34,0x2e,0x32,0xa0,0x0; .dat "Atlas-Shell v0.4.2", 0xA0, 0x00
; :text_prompt dat " $> ", 0x00 (line 939)
dat 0x20,0x24,0x3e,0x20,0x0; .dat " $> ", 0x00
; :text_unrecognized dat "Unrecognized command", 0xA0, 0x00 (line 940)
dat 0x55,0x6e,0x72,0x65,0x63,0x6f,0x67,0x6e,0x69,0x7a,0x65,0x64,0x20,0x63,0x6f,0x6d,0x6d,0x61,0x6e,0x64,0xa0,0x0; .dat "Unrecognized command", 0xA0, 0x00
; :input_text_buffer dat "                                ", 0x00 (line 941)
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0; .dat "                                ", 0x00
; :input_buffer dat 0x0000 (line 942)
dat 0x0                    ; .dat 0x0000
; :ack_command dat 0x00 (line 943)
dat 0x0                    ; .dat 0x00
; :command_version_os dat "os", 0 (line 944)
dat 0x6f,0x73,0x0          ; .dat "os", 0
; :command_version_separator dat ".", 0 (line 945)
dat 0x2e,0x0               ; .dat ".", 0
; :command_load_help dat "Syntax: load [appID]", 0xA0, 0x00 (line 946)
dat 0x53,0x79,0x6e,0x74,0x61,0x78,0x3a,0x20,0x6c,0x6f,0x61,0x64,0x20,0x5b,0x61,0x70,0x70,0x49,0x44,0x5d,0xa0,0x0; .dat "Syntax: load [appID]", 0xA0, 0x00
; :command_load_unknown dat "Failed to load application", 0xA0, 0x00 (line 947)
dat 0x46,0x61,0x69,0x6c,0x65,0x64,0x20,0x74,0x6f,0x20,0x6c,0x6f,0x61,0x64,0x20,0x61,0x70,0x70,0x6c,0x69,0x63,0x61,0x74,0x69,0x6f,0x6e,0xa0,0x0; .dat "Failed to load application", 0xA0, 0x00
; :command_kill_forbidden dat "Cannot kill process: Forbidden", 0xA0, 0x00 (line 948)
dat 0x43,0x61,0x6e,0x6e,0x6f,0x74,0x20,0x6b,0x69,0x6c,0x6c,0x20,0x70,0x72,0x6f,0x63,0x65,0x73,0x73,0x3a,0x20,0x46,0x6f,0x72,0x62,0x69,0x64,0x64,0x65,0x6e,0xa0,0x0; .dat "Cannot kill process: Forbidden", 0xA0, 0x00
; :command_kill_help dat "Syntax: kill [last|procID]", 0xA0, 0x00 (line 949)
dat 0x53,0x79,0x6e,0x74,0x61,0x78,0x3a,0x20,0x6b,0x69,0x6c,0x6c,0x20,0x5b,0x6c,0x61,0x73,0x74,0x7c,0x70,0x72,0x6f,0x63,0x49,0x44,0x5d,0xa0,0x0; .dat "Syntax: kill [last|procID]", 0xA0, 0x00
; :command_kill_last dat "last", 0 (line 950)
dat 0x6c,0x61,0x73,0x74,0x0; .dat "last", 0
; :command_list_info dat "Process list:", 0xA0, 0x00 (line 951)
dat 0x50,0x72,0x6f,0x63,0x65,0x73,0x73,0x20,0x6c,0x69,0x73,0x74,0x3a,0xa0,0x0; .dat "Process list:", 0xA0, 0x00
; :command_parameter_buffer dat "                                ", 0x00 (line 952)
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0; .dat "                                ", 0x00
; :command_number_buffer dat "     ", 0x00 (line 953)
dat 0x20,0x20,0x20,0x20,0x20,0x0; .dat "     ", 0x00
; :command_ls_row dat "                                ", 0x00 (line 954)
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0; .dat "                                ", 0x00
; :command_cd_back dat "..", 0 (line 955)
dat 0x2e,0x2e,0x0          ; .dat "..", 0
; :command_cd_root dat "/", 0 (line 956)
dat 0x2f,0x0               ; .dat "/", 0
; :command_cd_help dat "Syntax : cd [directory|..|/]", 0xA0, 0x00 (line 957)
dat 0x53,0x79,0x6e,0x74,0x61,0x78,0x20,0x3a,0x20,0x63,0x64,0x20,0x5b,0x64,0x69,0x72,0x65,0x63,0x74,0x6f,0x72,0x79,0x7c,0x2e,0x2e,0x7c,0x2f,0x5d,0xa0,0x0; .dat "Syntax : cd [directory|..|/]", 0xA0, 0x00
; :command_cd_unknown dat " doesnt exist", 0xA0, 0 (line 958)
dat 0x20,0x64,0x6f,0x65,0x73,0x6e,0x74,0x20,0x65,0x78,0x69,0x73,0x74,0xa0,0x0; .dat " doesnt exist", 0xA0, 0
; :command_runfile_notexe_text dat "File is not executable", 0xA0, 0x00 (line 959)
dat 0x46,0x69,0x6c,0x65,0x20,0x69,0x73,0x20,0x6e,0x6f,0x74,0x20,0x65,0x78,0x65,0x63,0x75,0x74,0x61,0x62,0x6c,0x65,0xa0,0x0; .dat "File is not executable", 0xA0, 0x00
; :command_clear dat "clear", 0 (line 962)
dat 0x63,0x6c,0x65,0x61,0x72,0x0; .dat "clear", 0
; :command_version dat "version", 0 (line 963)
dat 0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x0; .dat "version", 0
; :command_load dat "load", 0 (line 964)
dat 0x6c,0x6f,0x61,0x64,0x0; .dat "load", 0
; :command_kill dat "kill", 0 (line 965)
dat 0x6b,0x69,0x6c,0x6c,0x0; .dat "kill", 0
; :command_list dat "list", 0 (line 966)
dat 0x6c,0x69,0x73,0x74,0x0; .dat "list", 0
; :command_ls dat "ls", 0 (line 967)
dat 0x6c,0x73,0x0          ; .dat "ls", 0
; :command_cd dat "cd", 0 (line 968)
dat 0x63,0x64,0x0          ; .dat "cd", 0
; :command_cat dat "cat", 0 (line 969)
dat 0x63,0x61,0x74,0x0     ; .dat "cat", 0
; :command_mkdir dat "mkdir", 0 (line 970)
dat 0x6d,0x6b,0x64,0x69,0x72,0x0; .dat "mkdir", 0
; :command_rmdir dat "rmdir", 0 (line 971)
dat 0x72,0x6d,0x64,0x69,0x72,0x0; .dat "rmdir", 0
; :command_cp dat "cp", 0 (line 972)
dat 0x63,0x70,0x0          ; .dat "cp", 0
; :command_ln dat "ln", 0 (line 973)
dat 0x6c,0x6e,0x0          ; .dat "ln", 0
; :command_mv dat "mv", 0 (line 974)
dat 0x6d,0x76,0x0          ; .dat "mv", 0
; :command_echo dat "echo", 0 (line 975)
dat 0x65,0x63,0x68,0x6f,0x0; .dat "echo", 0
; :proc_list_buffer (line 978)
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :proc_list_buffer_end (line 981)
; :last_proc dat 0x0000 (line 982)
dat 0x0                    ; .dat 0x0000
; :present_working_directory dat 0x0000 (line 985)
dat 0x0                    ; .dat 0x0000
; :present_working_directory_name dat "                ", 0x00 (line 986)
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0; .dat "                ", 0x00
; :directory_stack (line 987)
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
dat 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0; .dat 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
; :directory_stack_end (line 990)
; :AtlasShell_end (line 992)
; =====Begin file: ../apps/AtlasText.dasm16
; :AtlasText (line 3)
dat 0x7820,0x1021          ; JSR [0x1021]
dat 0x7cc1,0x1b75          ; SET I, AtlasText_loop_end
dat 0x7cc3,0x1b69          ; SUB I, AtlasText_loop
dat 0x7c01,0x1b7d          ; SET A, AtlasText_input_buffer
dat 0x7c21,0x1             ; SET B, 1
dat 0x7820,0x1026          ; JSR [0x1026]
; :AtlasText_loop (line 14)
dat 0x7fd2,0x1b,0x1b7d     ; IFE [AtlasText_input_buffer], 0x001B
dat 0x7f81,0x1b75          ; SET PC, AtlasText_die
dat 0x7c01,0x1b7d          ; SET A, AtlasText_input_buffer
dat 0x7820,0x101e          ; JSR [0x101E]
dat 0x7820,0x1002          ; JSR [0x1002]
dat 0x1b83                 ; SUB PC, I
; :AtlasText_loop_end (line 25)
; :AtlasText_die (line 26)
dat 0x7c01,0x1b7d          ; SET A, AtlasText_input_buffer
dat 0x7820,0x1027          ; JSR [0x1027]
dat 0x7820,0x1021          ; JSR [0x1021]
dat 0x7820,0x1005          ; JSR [0x1005]
; :AtlasText_data (line 31)
; :AtlasText_input_buffer dat 0x0000, 0x0000 (line 32)
dat 0x0,0x0                ; .dat 0x0000, 0x0000
; :AtlasText_end (line 33)
; =====Begin file: ../apps/apps.dasm16
; :application_table (line 6)
; :app1 dat "AtlasText", 0, AtlasText, AtlasText_end (line 7)
dat 0x41,0x74,0x6c,0x61,0x73,0x54,0x65,0x78,0x74,0x0,0x1b5d,0x1b7f; .dat "AtlasText", 0, AtlasText, AtlasText_end
; :app2 dat "AtlasShell", 0, AtlasShell, AtlasShell_end (line 8)
dat 0x41,0x74,0x6c,0x61,0x73,0x53,0x68,0x65,0x6c,0x6c,0x0,0x14d1,0x1b5d; .dat "AtlasShell", 0, AtlasShell, AtlasShell_end
; :application_table_end (line 9)
; =====Begin file: ../misc/vfs.dasm16
; :files (line 2)
; :files_table (line 11)
dat 0xc                    ; .dat 0x000C
dat 0xffff,0x11,0x2f,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0,0x0; .dat 0xFFFF, 0x0011, "/", 0, "              ", 0x0000, 0x0000
dat 0x4,0x11,0x54,0x65,0x78,0x74,0x46,0x69,0x6c,0x65,0x73,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x1,0x0; .dat 0x0004, 0x0011, "TextFiles", 0, "      ", 0x0001, 0x0000
dat 0x0,0x11,0x50,0x72,0x6f,0x67,0x72,0x61,0x6d,0x73,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2,0x0; .dat 0x0000, 0x0011, "Programs", 0, "       ", 0x0002, 0x0000
dat 0x0,0x11,0x44,0x61,0x74,0x61,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x4,0x0; .dat 0x0000, 0x0011, "Data", 0, "           ", 0x0004, 0x0000
dat 0x0,0x11,0x53,0x79,0x73,0x74,0x65,0x6d,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3,0x0; .dat 0x0000, 0x0011, "System", 0, "         ", 0x0003, 0x0000
dat 0x3,0x11,0x6c,0x69,0x62,0x73,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5,0x0; .dat 0x0003, 0x0011, "libs", 0, "           ", 0x0005, 0x0000
dat 0x1,0x3,0x66,0x69,0x6c,0x65,0x30,0x31,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1c89,0x1cd5; .dat 0x0001, 0x0003, "file01", 0, "         ", file01, file01_end
dat 0x2,0x9,0x68,0x65,0x6c,0x6c,0x6f,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x0,0x20,0x20,0x20,0x20,0x1d1b,0x1d37; .dat 0x0002, 0x0009, "hello_world", 0, "    ", file02, file02_end
dat 0x3,0x9,0x66,0x72,0x65,0x65,0x5f,0x6d,0x65,0x6d,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d37,0x1d86; .dat 0x0003, 0x0009, "free_mem", 0, "       ", file03, file03_end
dat 0x1,0x5,0x66,0x69,0x6c,0x65,0x30,0x34,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d86,0x1d9c; .dat 0x0001, 0x0005, "file04", 0, "         ", file04, file04_end
dat 0x2,0x9,0x62,0x61,0x6c,0x6c,0x5f,0x67,0x61,0x6d,0x65,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x1d9c,0x1df0; .dat 0x0002, 0x0009, "ball_game", 0, "      ", file05, file05_end
dat 0x1,0x3,0x66,0x69,0x6c,0x65,0x30,0x36,0x0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1cd5,0x1d1b; .dat 0x0001, 0x0003, "file06", 0, "         ", file06, file06_end
; :files_table_end (line 25)
; :file01 (line 28)
dat 0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x73,0x6f,0x6d,0x65,0x20,0x74,0x65,0x78,0x74,0x20,0x66,0x72,0x6f,0x6d,0x20,0x61,0x20,0x66,0x69,0x6c,0x65,0x20,0x20,0x20; .dat "This is some text from a file   "
dat 0x42,0x6c,0x61,0x68,0x20,0x62,0x6c,0x61,0x68,0x20,0x73,0x6f,0x6d,0x65,0x20,0x6d,0x6f,0x72,0x65,0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e,0x74,0x20,0x20,0x20,0x20,0x20; .dat "Blah blah some more content     "
dat 0x54,0x65,0x72,0x6d,0x69,0x6e,0x61,0x74,0x69,0x6f,0x6e,0x0; .dat "Termination", 0x00
; :file01_end (line 32)
; :file06 (line 34)
dat 0x4e,0x6f,0x77,0x20,0x73,0x6f,0x6d,0x65,0x20,0x74,0x65,0x73,0x74,0x73,0x20,0x66,0x6f,0x72,0x20,0x6f,0x75,0x74,0x70,0x75,0x74,0xa0; .dat "Now some tests for output", 0xA0
dat 0x74,0x6f,0x20,0x73,0x65,0x65,0x20,0x68,0x6f,0x77,0x20,0x77,0x65,0x20,0x68,0x61,0x6e,0x64,0x6c,0x65,0x20,0x74,0x68,0x69,0x6e,0x67,0x73,0xa0; .dat "to see how we handle things", 0xA0
dat 0x49,0x20,0x68,0x6f,0x70,0x65,0x20,0x69,0x74,0x20,0x77,0x6f,0x72,0x6b,0x73,0x0; .dat "I hope it works", 0x00
; :file06_end (line 38)
; :file02 (line 42)
dat 0x4714                 ; .dat 0x4714
dat 0x1                    ; .dat 0x0001
dat 0x7                    ; .dat 0x0007
dat 0x15                   ; .dat 0x0015
dat 0xb                    ; .dat 0x000B
dat 0x4                    ; .dat 0x0004
dat 0x1                    ; .dat 0x0001
dat 0x7c01,0x8,0x7820,0x101e,0x7820,0x1002,0x7820,0x1005; .dat 0x7C01, 0x0008, 0x7820, 0x101E, 0x7820, 0x1002, 0x7820, 0x1005
dat 0x48,0x65,0x6c,0x6c,0x6f,0x20,0x57,0x6f,0x72,0x6c,0x64,0xa0,0x0; .dat 0x0048, 0x0065, 0x006c, 0x006c, 0x006f, 0x0020, 0x0057, 0x006f, 0x0072, 0x006c, 0x0064, 0x00a0, 0x0000
; :file02_end (line 54)
; :file03 (line 58)
dat 0x4714                 ; .dat 0x4714
dat 0x1                    ; .dat 0x0001
dat 0xb                    ; .dat 0x000B
dat 0x44                   ; .dat 0x0044
dat 0xd                    ; .dat 0x000D
dat 0x5                    ; .dat 0x0005
dat 0x7,0x10,0x16,0x20,0x22; .dat 0x0007, 0x0010, 0x0016, 0x0020, 0x0022
dat 0x7820,0x1011,0x7c61,0xffff,0x63,0xc01,0x7c21,0x27; .dat 0x7820, 0x1011, 0x7C61, 0xffff, 0x0063, 0x0C01, 0x7C21, 0x0027
dat 0x7c41,0xa,0x7820,0x101b,0xc01,0x7c0d,0x9,0x7c21; .dat 0x7C41, 0x000A, 0x7820, 0x101B, 0x0C01, 0x7C0D, 0x0009, 0x7C21
dat 0x39,0x7c41,0xa,0x7820,0x101b,0x7c01,0x27,0x7d12; .dat 0x0039, 0x7C41, 0x000A, 0x7820, 0x101B, 0x7C01, 0x0027, 0x7D12
dat 0x0,0x7d01,0x20,0x7c02,0x1,0x7d13,0xa0,0x7f81; .dat 0x0000, 0x7D01, 0x0020, 0x7C02, 0x0001, 0x7D13, 0x00A0, 0x7F81
dat 0x17,0x7c01,0x27,0x7820,0x101e,0x7820,0x1005; .dat 0x0017, 0x7C01, 0x0027, 0x7820, 0x101E, 0x7820, 0x1005
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x64,0x73,0x20,0x66,0x72,0x65,0x65,0x20,0x28; .dat 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0077, 0x006f, 0x0072, 0x0064, 0x0073, 0x0020, 0x0066, 0x0072, 0x0065, 0x0065, 0x0020, 0x0028
dat 0x20,0x20,0x20,0x20,0x20,0x20,0x4b,0x42,0x29,0xa0,0x0; .dat 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x004b, 0x0042, 0x0029, 0x00a0, 0x0000
; :file03_end (line 75)
; :file04 (line 77)
dat 0x49,0x20,0x61,0x6d,0x20,0x68,0x69,0x64,0x64,0x65,0x6e,0x2c,0x20,0x6d,0x75,0x61,0x68,0x61,0x68,0x61,0x21,0x0; .dat "I am hidden, muahaha!", 0x00
; :file04_end (line 79)
; :file05 (line 83)
dat 0x4714                 ; .dat 0x4714
dat 0x1                    ; .dat 0x0001
dat 0x5                    ; .dat 0x0005
dat 0x4f                   ; .dat 0x004F
dat 0xc                    ; .dat 0x000C
dat 0x7c61,0x1,0x7c81,0x1,0x7ce1,0xc8,0x7c01,0x0; .dat 0x7c61, 0x0001, 0x7c81, 0x0001, 0x7ce1, 0x00c8, 0x7c01, 0x0000
dat 0x7c21,0x0,0x7c41,0x0,0x7cc1,0x4f,0x7cc3,0x10; .dat 0x7c21, 0x0000, 0x7c41, 0x0000, 0x7cc1, 0x004f, 0x7cc3, 0x0010
dat 0x1441,0x7c53,0x0,0x7c53,0x7440,0x7820,0x1022,0x7ce3; .dat 0x1441, 0x7c53, 0x0000, 0x7c53, 0x7440, 0x7820, 0x1022, 0x7ce3
dat 0x1,0x7cf2,0x0,0x7820,0x1005,0xc02,0x1022,0x7c12; .dat 0x0001, 0x7cf2, 0x0000, 0x7820, 0x1005, 0x0c02, 0x1022, 0x7c12
dat 0x1f,0x7c61,0xffff,0x7c32,0xb,0x7c81,0xffff,0x7c12; .dat 0x001f, 0x7c61, 0xffff, 0x7c32, 0x000b, 0x7c81, 0xffff, 0x7c12
dat 0x0,0x7c61,0x1,0x7c32,0x0,0x7c81,0x1,0x701; .dat 0x0000, 0x7c61, 0x0001, 0x7c32, 0x0000, 0x7c81, 0x0001, 0x0701
dat 0x7c24,0x20,0x22,0x7c22,0x8000,0x24a1,0x6021,0x1f01; .dat 0x7c24, 0x0020, 0x0022, 0x7c22, 0x8000, 0x24a1, 0x6021, 0x1f01
dat 0x1b01,0x7cc1,0x4a,0x7cc3,0x3f,0x7ce1,0x8,0x7c41; .dat 0x1b01, 0x7cc1, 0x004a, 0x7cc3, 0x003f, 0x7ce1, 0x0008, 0x7c41
dat 0x7440,0x7820,0x1022,0x7820,0x1002,0x7ce3,0x1,0x7cf3; .dat 0x7440, 0x7820, 0x1022, 0x7820, 0x1002, 0x7ce3, 0x0001, 0x7cf3
dat 0x0,0x1b83,0x60c1,0x60e1,0x7820,0x1002,0x1b83; .dat 0x0000, 0x1b83, 0x60c1, 0x60e1, 0x7820, 0x1002, 0x1b83
; :file05_end (line 100)
; :files_end (line 102)
; =====Begin file: kernel/core.dasm16
; :os_content_end (line 167)